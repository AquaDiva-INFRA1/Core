@using Vaiona.Web.Mvc;<br />
@section Information
{
This guide will walk you through the basics of using data planning including how to manage data types, units, data attributes and also structured and unstructured data structures.
}
@section leftPane{
 <div class="toc">
 <h2> Data Planning ToC </h2>
 <br />
<p></p> <a href="#_Toc480889137">Overview</a>
<p></p> <a href="#_Toc480889138">Data Structure Manager</a>
<p></p> <a href="#_Toc480889139">&#xa0;&#xa0;&#xa0;&#xa0;Create a Data Structure</a>
<p></p> <a href="#_Toc480889140">&#xa0;&#xa0;&#xa0;&#xa0;Add Variables</a>
<p></p> <a href="#_Toc480889141">&#xa0;&#xa0;&#xa0;&#xa0;Create a copy of a Data Structure</a>
<p></p> <a href="#_Toc480889142">&#xa0;&#xa0;&#xa0;&#xa0;Download an Excel template</a>
<p></p> <a href="#_Toc480889143">Data Type Manager</a>
<p></p> <a href="#_Toc480889144">Unit Manager</a>
<p></p> <a href="#_Toc480889145">Variable Template Manager</a>
 </div>
}
<style>
.toc { position: fixed; top:100px; }
.scrollable { overflow: auto; height: 750px; }
:target:before { content: ""; display: block; height: 100px; }
</style>

<br/><h1><a id="_Toc480889137"><span>Overview</span></a></h1>
<p><span>&#xa0;</span></p>
<p><span>In BEXIS 2 data is stored and managed as part of a dataset. A dataset may be anything from a single record up to a collection of millions of records and multiple variables. Each dataset may have an individual structure given by the number of variables and their properties. It is up to the user or the data manager of a project to define such Data Structure s. This is what the Data Planning Module is for. </span></p>
<p><span>The module is called "Data Planning" since it is good practice to specify the Data Structure before collecting your data in the field or the laboratory. Your data can only be uploaded to the system (using the Data Collection Module) if there is a corresponding Data Structure already existing. </span></p>
<p><span>A Data Structure contains one or more Variables . Each Variable is defined by its Data Type, a Unit, and a unique name. So defining Data Types and Units would be the first step, if they are not available yet. </span></p>
<p><span>&#xa0;</span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img1.jpeg" width="602" height="123" alt="Main_Menu_1" /><span>&#xa0;</span></p>
<p><span>&#xa0;</span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img2.jpeg" width="598" height="155" alt="Main_Menu_2" /><span>&#xa0;</span></p>
<p><span>&#xa0;</span></p>
<p><span>The system encourages reuse of Variables , as well as Data Types and Units. For example, there s hould be only one Variable (i.e. Variable Template) for temperat ure values with a Data type of "float" and measured in degree Celsius (i.e. unit). All datasets containing such temperature measurements should use this Variable Template in their Data Structure . The advantage of such reuse is not only to avoid redundancy (e.g. different names for same thing), but is foremost to enable integration of identical variables across different datasets for large synthesis tasks later on.</span></p>
<p><span>&#xa0;</span></p>
<h1><a id="_Toc480889138"><span>Data Structure Manager</span></a></h1>
<p><span>The Data Structure Manager is a tool to create, modify and delete Data Structure s. Data Structure s contain Variables, which are specific instances of Variable Templates. For example, only one Variable Template ‘Count' is needed to build a Data Structure of multiple similar variables where only the name (e.g. species name) is different. Each Variable uses the same Variable Template (e.g. instances of Count). </span></p>
<p><span>It is possible to create Data Structure s for structured data (Excel tables, CSV-Files ...) and for unstructured data (images, videos ...). </span></p>
<p><span>&#xa0;</span></p>
<h2><a id="_Toc480889139"><span>Create a Data Structure</span></a></h2>
<p><span>To create a Data Structure , in the Plan Data Structure Manager, select the Tabular or File radio button. Fill the fields and click on the Save button. A name for a Data Structure is required.</span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img3.jpeg" width="597" height="192" alt="Create-Datastructure" /><span>&#xa0;</span></p>
<p><span>By clicking on the name of a Data Structure in the list, if it is not already in use by a dataset, you can edit it. In case of Tabular, you can edit also variables. </span></p>
<p><span>In Edit mode, you can</span></p>
<p><span>&#183; &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0; see datasets that are using that Data Structure</span></p>
<p><span>&#183; &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0; download an Excel template (in case of structured)</span></p>
<p><span>&#183; &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0; delete a Data Structure</span></p>
<p><span>&#183; &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0; create a copy by clicking on the "Save As" button</span></p>
<p><span>&#xa0;</span></p>
<h2><a id="_Toc480889140"><span>Add Variables</span></a></h2>
<p><span>In case of Tabular, a Data Structure usually contains variables. Variables are defined before as Variable Templates. If a Data Structure is in use, you are not able to add or remove variables.</span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img4.jpeg" width="602" height="414" alt="Datastructure-Edit" /><span>&#xa0;</span></p>
<p><span>&#xa0;</span></p>
<p><span>After adding variables, you can rearrange the order of the variables by dragging and dropping them. Please note, that the order cannot be changed anymore once a dataset is using this Data Structure . You may also delete variable s from the list.</span></p>
<p><span>You can define requirement for each variable. In the Optional row, if the checkbox is ticked, it means that during upload data to a dataset, this variable could be empty.</span></p>
<p><span>&#xa0;</span></p>
<h2><a id="_Toc480889141"><span>Create a copy of a Data Structure</span></a></h2>
<p><span>You can create a copy of a Data Structure , either it is Tabular or File (formerly structured vs. unstructured), by clicking on the Save as button. In that window, the Name is filled with the original one and you need to fill it with a new one. </span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img5.jpeg" width="600" height="413" alt="Datastructure-copy" /><span>&#xa0;</span></p>
<p><span>&#xa0;</span></p>
<h2><a id="_Toc480889142"><span>Download an Excel template</span></a></h2>
<p><span>By clicking on the Download button system create an Excel template from current Data Structure , which is used when you want to upload data to a dataset (refer to data collection user guide for more details). Save this template file in your computer.</span></p>
<p><span>As you open this Excel template, you have to enable macros for it. Macros automate frequently-used tasks . Normally, when you open a template file, you have a security warning, that says macros have been disabled. You can click on the Options button and enable this content. If you did not get this kind of warning, you need to enable macros manually. Depending on what Microsoft Excel version you use, enable or disable macros is a bit different. But, Macro security settings are generally located in the Trust Centre . </span></p>
<p><span>After that procedure, it is time to enter your data into the Excel template. You could upload later this file into a Dataset to the BExIS2 software.</span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img6.png" width="601" height="376" alt="enableMacro" /><span>&#xa0;</span></p>
<h1><span>&#xa0;</span></h1>
<h1><a id="_Toc480889143"><span>Data Type Manager</span></a></h1>
<p><span>&#xa0;</span></p>
<p><span>With the Data Type Manager you are able to create, modify and delete Data Types. They are required to specify Variable Templates .</span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img7.jpeg" width="599" height="282" alt="Manage_Data_Type" /><span>&#xa0;</span></p>
<p><span>To create a Data Type, click on the Create Data Type button . Fill the fields, select a system type and click on the Save button. The Data Type is stored if all information are correct and it is not a duplicate.</span></p>
<p><span>Use </span><img src="~/Areas/RPM/Content/Images/Help/Help_img8.png" width="24" height="24" alt="img8" /><span> for edit and </span><img src="~/Areas/RPM/Content/Images/Help/Help_img9.png" width="24" height="24" alt="img9" /><span> for delete a data type.</span></p>
<p><span>In a typical project scenario, the responsible data(base) manager would have created the most common Data Types and Units.</span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img10.png" width="516" height="317" alt="Create Data Type" /><span>&#xa0;</span></p>
<p><span>&#xa0;</span></p>
<h1><a id="_Toc480889144"><span>Unit Manager</span></a></h1>
<p><span>With the Unit Manager you are able to create, modify and delete Units. Units may be required to define Variable Template s.</span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img11.jpeg" width="600" height="303" alt="Manage_Units" /><span>&#xa0;</span></p>
<p><span>&#xa0;</span></p>
<p><span>To create a Unit , click on the Create Unit button . Fill the fields, select a Measurement System and create or select a Dimension. To create a Dimension enter a Name in the Dimension Name field and edit the Dimension Specification in this pattern "L(0,0)M(0,0)T(0,0)I(0,0)Θ(0,0)N(0,0)J(0,0)" , for more information click </span><a href="https://translate.google.de/translate?sl=de&amp;tl=en&amp;js=y&amp;prev=_t&amp;hl=de&amp;ie=UTF-8&amp;u=https%3A%2F%2Fde.wikipedia.org%2Fwiki%2FDimension_%28Gr%25C3%25B6%25C3%259Fensystem%29&amp;edit-text="><span class="Hyperlink">here</span></a><span>. For example, a Unit of meter per second (m/s) would represented as "L( 1 ,0)M(0,0)T(0, 1 )I(0,0)Θ(0,0)N(0,0)J(0,0)" .</span></p>
<p><span>For a Unit, you could define one or more data types associated with it. By clicking on the Save button, the Unit is stored if all information is correct and it is not a duplicate.</span></p>
<p><span>Use </span><img src="~/Areas/RPM/Content/Images/Help/Help_img12.png" width="24" height="24" alt="img12" /><span> for edit and </span><img src="~/Areas/RPM/Content/Images/Help/Help_img13.png" width="24" height="24" alt="img13" /><span> for delete a Unit.</span></p>
<p><span>&#xa0;</span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img14.png" width="601" height="278" alt="Create Unit" /><span>&#xa0;</span></p>
<p><span>&#xa0;</span></p>
<h1><a id="_Toc480889145"><span>Variable Template Manager</span></a></h1>
<p><span>With the Variable Template Manager you are able to create, modify and delete Variable s (called Data Attributes in older BEXIS 2 versions) . V ariables are required to create Data Structure s. </span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img15.jpeg" width="600" height="289" alt="Manage_Data_Attributes" /><span>&#xa0;</span></p>
<p><span>To create a Variable , click on the Create Variable Template button . Fill the fields. Select an associated Unit and Data Type and click on the Save button. T he Variable is stored if all information are correct and it is not a duplicate.</span></p>
<p><span>Use </span><img src="~/Areas/RPM/Content/Images/Help/Help_img16.png" width="24" height="24" alt="img16" /><span> for edit and </span><img src="~/Areas/RPM/Content/Images/Help/Help_img17.png" width="24" height="24" alt="img17" /><span> for delete a Variable .</span></p>
<p><img src="~/Areas/RPM/Content/Images/Help/Help_img18.png" width="601" height="349" alt="plan_dataAttribute" /><span>&#xa0;</span></p>
<p><span>It is possible also to add c onstrains on a Variable by clicking on the Constrains button . You can add a Range, a Pattern and a Domain Constrains to each Variable . </span></p>
<p><span>&#183; &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0; Range: If the input data is of numeric type, this constraint checks whether the input value falls in the specified range. If the input data is of type string, the range check behaves like a length check, which means the length of the input string should fall in the range. The range has a lower bound and an upper bound, plus two indicators to show whether the boundary values are included in the range. Negate function checks if the value is out of the range!</span></p>
<p><span>&#183; &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0; Pattern: takes the value as input and matches it against a pattern to see whether the pattern is found in the input. If so, it returns true; otherwise false. Pattern constraints apply to text values only, for more information on the format click </span><a href="https://en.wikipedia.org/wiki/Regular_expression"><span class="Hyperlink">here</span></a><span>.</span></p>
<p><span>&#183; &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0; Domain: takes the value as input and matches it against each and every domain item in the list. If the value matches one, it stops matching and returns true, which means the value satisfies the constraint. If no match is found it returns false. No duplicate domain item is allowed, although it does not affect the matching procedure described. Domain items can be characters, strings, Booleans or numbers. Their data type is enforced by the associated Variable Template . Using the domain constraint as a tool to model acronyms and similar topics provided that some extra information such as description of each item is available, is supported.</span></p>
<p><span>&#183; &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0; Negation: The inversion of the chosen constraint will apply. In fact the result of the constraint is XORed with the negation field. For example, a negated Range Constraint of Min=1 and Max= 100 will allow all values outside of this range.</span></p>
<p><span>&#xa0;</span></p>
<p><span>1</span></p>
<p><span>&#xa0;</span></p>
