@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@using BExIS.Dlm.Services.DataStructure
@using System
@using System.Text.RegularExpressions
@using BExIS.Web.Shell.Areas.RPM.Controllers
@model BExIS.Web.Shell.Areas.RPM.Models.UnitManagerModel

@*<header>*@
    <link href="@Url.Content("~/Areas/RPM/Stylesheets/RPM.css")" rel="stylesheet" type="text/css" />  
@*</header> *@

@{
    string temp = "";
    
    string windowName = "Create Unit";

    if (Model.editUnitModel.Unit != new Unit())
    {
        if (!string.IsNullOrEmpty(Model.editUnitModel.Unit.Name))
        {
            windowName = "Edit Unit: " + Model.editUnitModel.Unit.Name + " (Id: " + Model.editUnitModel.Unit.Id + ")";
        }
    }
    
}

@{
    ViewBag.Title = "Unit Manager";
}

@section Scripts{
  
}

@section Information
{

    With this interface you are able to manage (e.g. create, edit, delete) units which may be needed to define data attributes. Units cannot be edited or deleted once they are associated with a data attribute (they become locked).
}

<div title="Create a new Unit" class="bx-rpm-buttons">
    @Html.ActionLink("Create Unit", "openUnitWindow", "Unit", new { id = 0 }, new { @class = "t-button function" })
</div>

    @(Html.Telerik().Grid(Model.editUnitModelList)    
            .Name("bx-rpm-unitGrid")
            .Sortable()
            .Filterable()          
            .Columns(columns =>
                {
                    columns.Template(
                        @<text>
                            
                            @if (item.inUse)
                            {
                                <div style="text-align:center;"><button class="bx-button small bx-disabled">locked</button></div>
                            }
                            else
                            {
                                <div>
                                    @Html.ActionLink("EDIT", "openUnitWindow", "Unit", new { id = item.Unit.Id }, new { @class = "bx-button small" })
                                    @Html.ActionLink("DELETE", "deletUnit", "Unit", new { id = item.Unit.Id }, new { @class = "bx-button small", onclick = "return confirm('Are you sure you want to delete the Unit " + item.Unit.Name + " ?')" })
                            
                                </div>
                            }
                            
                        </text>
                    ).Title("Actions")
                        .Width(180)
                        .ClientTemplate(
                            @Html.ActionLink("Edit", "openUnitWindow", "Unit", new { id = "<#= id #>" }, new { @class = "t-icon t-edit" }).ToHtmlString() +
                            @Html.ActionLink("Delete", "deletUnit", "Unit", new { id = "<#= id #>" }, new { @class = "t-icon t-delete", onclick = "return confirm('Are you sure you want to delete the Unit " + Model.editUnitModel.Unit.Name + " ?')" }).ToHtmlString()
                            );
                    columns.Bound(c => c.Unit.Name);
                    columns.Bound(c => c.Unit.Id);
                    columns.Bound(c => c.Unit.Abbreviation);
                    columns.Bound(c => c.Unit.Dimension.Name).Title("Dimension Name");
                    columns.Bound(c => c.Unit.MeasurementSystem);
                    columns.Template(
                        @<text>
                            @{
                                temp = "";
                                List<DataType> tempList = item.Unit.AssociatedDataTypes.OrderBy(p => p.Name).ToList();
                                foreach (DataType dt in tempList)
                                {
                                    if (temp == "")
                                    { temp = dt.Name; }
                                    else
                                    { temp = temp + ", " + dt.Name; }
                                }
                              }
                              @temp 
                        </text>
                        )
                        .ClientTemplate("test")
                        .Title("Associated Data Types").Width(200);
                    columns.Bound(c => c.Unit.Description);
                }))
<br />
<br />
<br />
    

    <div style="position:absolute; left:20%; top:60px;">
                    @{ Html.Telerik().Window()
                            .Name("UintWindow")
                            .Title(windowName)
                            .ClientEvents((events => events.OnClose("close")))
                            .Draggable(true)
                            .Modal(true)
                            .Visible((bool)Session["Window"])
                            .Content(@<text>
                                        @Html.Partial("_editUnit", Model.editUnitModel)
                                        </text>)
                            .Render()
                            ;
        
                    }        
    </div>
@{Session["Window"] = false;}

<script type="text/javascript">
    function close(e)
    {
        checkedIDs = new Array(0);
        var data = { checkedIDs: checkedIDs };
        $.ajax({
            url: '/RPM/Unit/setChecked',
            type: 'POST',
            data: JSON.stringify(data),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                //alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                //alert("success");
            },
            async: true,
            processData: false
        });

        window.location.href = '/RPM/Unit/UnitManager';
    }
</script>
   
@*<script type="text/javascript">

    $(".test")
        .click(function () {
            $('<div style="background-color: yellow;"></div>')
                .html('<div><h6> You are trying to delete! </h6></div>')
                .dialog({
                    modal: true, title: 'message', autoOpen: true,
                    width: '200', height: '150', resizable: false,
                    buttons: {
                        OK: function () {
                            $.post
                            $(this).remove();
                            $deletUnit();
                            doFunctionForOK();
                        },
                        Cancel: function () {
                            $(this).remove();
                            $(".test").val(false);
                        }
                    }
                });
        })
        .hover(function () {
            $(this).html("<b>test</b>")
        }, function () {
            $(this).text("test");
        });
</script>*@