@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@using BExIS.Dlm.Entities.Data
@using BExIS.Dlm.Services.DataStructure
@using BExIS.Dlm.Services.Data
@model BExIS.RPM.Model.DataStructureDesignerModel

@{   
  
    List<string> CategoryList = new List<string>();
    int categoryIndex = 0;
    foreach (DataStructureCategory tc in Enum.GetValues(typeof(DataStructureCategory)))
    {
        CategoryList.Add(tc.ToString());
    }

    // need DataStructureCategory to create DS but can't find it in a DS    
}

<h3>
@if(Model.dataStructure.Id != 0)
{
    @Model.dataStructure.Name
}
else
{
    if (Model.structured)
    { 
        <font>New structured Data Structure</font>
    }
    else
    {
       <font>New unstructured Data Structure</font> 
    }
}
@if (Model.inUse)
{
    <font color="grey">(in use)</font>
}
</h3>
<div class="planingPartialDiv" style="width:100%;">   
 @using(Html.BeginForm("saveDataStructure", "Home", new {area = "RPM"}))
 {     
     <table>
         <tr>
            <td>
                <div id="info">
                    <table>
                        <tr>
                            <td>
                                Name: 
                                <div title="The name will be used for a new Data Structure">
                                @(Html.TextBoxFor(m => Model.dataStructure.Name, new {@class = "t-input"}))
                                </div>
                            </td>
                        </tr>
                       <tr class ="hidden">
                            <td>
                                @(Html.Telerik().DropDownList()
                                    .Name("category")
                                    .DropDownHtmlAttributes(new { style = "height: 200px" })
                                    .BindTo(new SelectList(CategoryList))
                                    .SelectedIndex(categoryIndex)
                                )
                            </td>
                       </tr>
                        <tr>
                            <td>
                                @if(Model.variables != null && Model.structured == true)
                                { 
                                     if(Model.variables.Count() > 0)
                                    {
                                        <font>Number of Variables:</font>@Model.variables.Count();
                                    }
                                    else
                                    {
                                        <font>Number of Variables:</font><font color="red">No Variables</font>
                                    }
                                }
                                else
                                {
                                    if(Model.structured == false)
                                    {
                                        <font> </font>
                                    }
                                    else
                                    {
                                        <font>Number of Variables:</font><font color="red">No Variables</font>
                                    }
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Data Structure ID: 
                                @Model.dataStructure.Id 
                            </td>
                        </tr>
                    </table>
                </>
            </td>
            <td>
                <div id="Description" style="vertical-align:top; padding:5px;" title="Description">
                    Description:         
                    @(Html.TextAreaFor(m => Model.dataStructure.Description, new {@class = "t-input datastrDes"}))
                </div>
            </td>
            <td>
                <div class="errorMsg" style="vertical-align:top; padding:5px;">
                     <font color="red">@ViewData["errorMsg"]</font>
                </div>
            </td>
        </tr>
    </table>
    @(Html.TextBoxFor(m => Model.dataStructure.Id, new {@class = "hidden"}))
     
    <div class="RPMbuttons">
        <button name="create" value="saveDataStructure" type="submit" class="t-button" title="Save Data Structure">Save</button>
        @if (Model.dataStructure.Id != null && Model.dataStructure.Id != 0)
        {
            if (Model.variables != null || Model.structured == true)
            {
                if(Model.variables.Count() > 0)
                {
                //<div title="Download">
                    @Html.ActionLink("Download", "downloadTemplate", "Home", new { id = Model.dataStructure.Id }, new { area = "RPM", @class = "t-button", @title = "Download Data Structure Template"})
                //</div>
                }
                else
                {
                    <button title="Download Data Structure Template" name="Download" class="t-button t-state-disabled" disabled="disabled">Download</button>
                }
            }
            else
            {
                    <button title="Download Data Structure Template" name="Download" class="t-button t-state-disabled" disabled="disabled">Download</button>
            }
            if(!(Model.inUse))
            {   
                if (Model.structured == true)
                {
                    @Html.ActionLink("Add Variables", "showVariables", "Home", new { id = Model.dataStructure.Id }, new { area = "RPM", @class = "t-button", @title = "Add Variable to Data Structure"})
                }   
                else
                {
                    <button title="Add Varriables" name="Add Variables" class="t-button t-state-disabled" disabled="disabled">AddVariable</button>
                }
                
                <button title="show Datasets using this Data Structure" name="Datasets" class="t-button t-state-disabled" disabled="disabled" >Datasets</button>
                @Html.ActionLink("Delete", "deleteDataStructure", "Home", new { id = Model.dataStructure.Id }, new { area = "RPM", @class = "t-button", @title = "Delete Data Structure", onclick = "return confirm('Are you sure you want to delete the Data Structure "+ Model.dataStructure.Name +"?')"})

            }
            else
            {
                <button title="Add Varriables" name="Add Variables" class="t-button t-state-disabled" disabled="disabled">AddVariable</button>
                @Html.ActionLink("Datasets", "showDatasets", "Home", new { id = Model.dataStructure.Id, structured = Model.structured }, new { area = "RPM", @class = "t-button", @title = "show Datasets using this Data Structure"})    
                <button title="Delete Data Structure" name="Download" class="t-button t-state-disabled" disabled="disabled" >Delete</button>
            }
        }          
    </div>
 }
</div>
<div style="position:absolute; left:10%; top:60px">
@{ Html.Telerik().Window()
        .Name("Add_Variable")
        .Title("Add Variable")
        .Draggable(true)
        .Visible((bool)Session["Window"])
        .Modal(true)
        .ClientEvents((events => events.OnClose("close")))
        .Content(@<text>
                    @Html.Partial("_addVariable", Model)
                    </text>)
        .Width(1000)
        .Render()
        ;
        
}
</div>
@{Session["Window"] = false;}
<div style="position:absolute; left:10%; top:60px">
@{ Html.Telerik().Window()
        .Name("showDatasets")
        .Title("Datasets")
        .Draggable(true)
        .Visible((bool)Session["DatasetWindow"])
        .Modal(true)
        .Content(@<text>
                    @Html.Partial("_showDatasets", Model)
                    </text>)
        .Width(500)
        .Render()
        ;        
}
</div> 
@{Session["DatasetWindow"] = false;}

<script type="text/javascript">
    function close(e)
    {
        checkedIDs = new Array(0);
        var data = { checkedIDs: checkedIDs };
        $.ajax({
            url: '/RPM/Home/setChecked',
            type: 'POST',
            data: JSON.stringify(data),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                //alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                //alert("success");
            },
            async: true,
            processData: false
        });
    }
</script>
