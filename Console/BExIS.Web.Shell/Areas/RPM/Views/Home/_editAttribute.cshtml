@using Telerik.Web.Mvc.UI
@using System.Linq;
@using BExIS.Dlm.Entities.DataStructure
@using BExIS.Dlm.Services.DataStructure
@model BExIS.Dlm.Entities.DataStructure.DataAttribute

@if(Model != null)
{  
    long unitIndex = 0;
    long dataTypeIndex = 0;

    List<Unit> unitList = (List<Unit>)Session["unitlist"];

    if(Model.Unit != null)
    {
        unitIndex = Model.Unit.Id;
    }


    List<DataType> dataTypeList = (List<DataType>)Session["dataTypeList"];
    dataTypeList = dataTypeList.OrderBy(p => p.Name).ToList();

    if(Model.DataType != null)
    {
        dataTypeIndex = Model.DataType.Id;
    } 
<div class="planingPartialDiv" id="createAttribute">
@using (Html.BeginForm("editAttribute", "Home", new { area = "RPM" }))
{
   @(Html.TextBox("parent", @HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString(), new {@class = "hidden"}))
   @(Html.TextBox("id", Model.Id, new {@class = "hidden"})) 
    <table>
        <tr>
            <td id="name">
                Name:<Font color="red">*</Font>
            </td>
            <td>
                @(Html.TextBoxFor(m => Model.Name, new {@class = "t-input", @autofocus = "autofocus", @tabindex = "1"}))
            </td>
            <td class="errorMsg">@Session["nameMsg"]</td>
        </tr>
        <tr id="shortname">
            <td>
                ShortName:
            </td>
            <td>
                @(Html.TextBoxFor(m => Model.ShortName, new {@class = "t-input", @tabindex = "2"}))
            </td>
        </tr>
        <tr>
            <td>
                Description:
            </td>
            <td>
                @(Html.TextBoxFor(m => Model.Description, new {@class = "t-input", @tabindex = "3"}))
            </td>
        </tr>
        <tr>
            <td>
                Unit:
            </td>
            <td>
              @*  @(Html.Telerik().DropDownList()
                    .Name("unitId")
                    .SelectedIndex(unitIndex)
                    .ClientEvents(events => events.OnChange("test"))
                    .BindTo(new SelectList(unitList, "Id", "Name"))
                )*@

                @Html.DropDownList("unitId", new SelectList(unitList, "Id", "Name", unitIndex), new { @class =" t-dropdown t-header t-dropdown-wrap", @tabindex = "4" })
            </td>
        </tr>
        <tr>
            <td>
                DataType:
            </td>
            <td>
                @*@(Html.Telerik().DropDownList()
                    .Name("dataTypeId")
                    .SelectedIndex(dataTypeIndex)
                    .BindTo(new SelectList(dataTypeList,"Id","Name"))
                )*@

                @Html.DropDownList("dataTypeId", new SelectList(dataTypeList,"Id","Name", dataTypeIndex), new { @class =" t-dropdown t-header t-dropdown-wrap", @tabindex = "5" })
            </td>
        </tr>
    </table>
    <div class="functions RPMbuttons">
        <font class="RPMbuttons" color="red">*</font>Please don't leave empty
    </div>
    <div class="submit RPMbuttons">
        <button name="create" value="create" type="submit" class="t-button"  id="saveButton" title="Save The Unit" tabindex = "6">Save</button>
        @Html.ActionLink("Cancel", "AttributeManager", "Home", new { area = "RPM", @class = "t-button", @title = "Cancel", @tabindex = "7" })
    </div>  
               
}
</div>
    
<script type="text/jscript">
   
    $('#unitId').change(function () {
        $.getJSON('/RPM/Home/getDatatypeList/' + $(this).val(), function (data) {
            var items = '';
            $.each(data, function (i, dataType) {
                items += "<option value='" + dataType.Value + "'>" + dataType.Text + "</option>";
            });
            $('#dataTypeId').html(items);
        });
    })
   
    $(document).ready(function () {
        $.getJSON('/RPM/Home/getDatatypeList/' + $('#unitId').val(), function (data) {
            var items = '';
            $.each(data, function (i, dataType) {
                if (dataType.Value == @dataTypeIndex)
                    items += "<option selected='selected' value='" + dataType.Value + "'>" + dataType.Text + "</option>"; 
                else
                    items += "<option value='" + dataType.Value + "'>" + dataType.Text + "</option>";
            });
            $('#dataTypeId').html(items);
        });
    })
</script>    
}
else
{
 <font color="red" style="margin:10px">Can't edit Data Attribute doesn't exist anymore.</font>
}
