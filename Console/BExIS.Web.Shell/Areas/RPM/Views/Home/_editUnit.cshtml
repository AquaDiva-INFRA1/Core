@using Telerik.Web.Mvc.UI
@using System
@using BExIS.Dlm.Entities.DataStructure
@using BExIS.Dlm.Services.DataStructure
@model BExIS.Dlm.Entities.DataStructure.Unit

@if(Model != null)
{
    List<string> MeasurementSystemList = new List<string>();
    int MeasurementSystemIndex = 0;
    int count = 0;
    foreach (MeasurementSystem ms in Enum.GetValues(typeof(MeasurementSystem)))
    {
        MeasurementSystemList.Add(ms.ToString());
        if (ms == Model.MeasurementSystem)
        {
            MeasurementSystemIndex = count;
        }
        count++;
    }

    List<DataType> dataTypeList = ((List<DataType>)Session["dataTypeList"]).OrderBy(p=>p.Name).ToList();

    List<long> checkedIds = new List<long>();

    if (Session["checked"] != null)
    {
        checkedIds = (List<long>)Session["checked"];
    }
 
    List<long> dataTypeIds = new List<long>();
    
    if(Model != null)
    {
        foreach (DataType dt in Model.AssociatedDataTypes)
        {
            dataTypeIds.Add(dt.Id);
        }
    }
            
<div class="planingPartialDiv" id="createUnit">

 

    @using (Html.BeginForm("editUnit", "Home", new { area = "RPM" }))
    {
       @(Html.TextBox("id", Model.Id, new { @class = "hidden" })) 
        <table>
            <tr id="name">
                <td id="nameBox">
                    Name:<font color="red">*</font>
                </td>
                <td>
                    @(Html.TextBoxFor(m => Model.Name, new { @class = "t-input" , @autofocus = "autofocus", @tabindex = "1"}))
                </td>
                <td class="errorMsg">@Session["nameMsg"]</td>
            </tr>
            <tr>
                <td>
                    Abbreviation:<Font color="red">*</Font>
                </td>
                <td>
                    @(Html.TextBoxFor(m => Model.Abbreviation, new { @class = "t-input", @tabindex = "2"}))
                </td>
                <td class="errorMsg">@Session["abbrMsg"]</td>
            </tr>
            <tr>
                <td>
                    Description:
                </td>
                <td>
                    @(Html.TextBoxFor(m => Model.Description, new { @class = "t-input", @tabindex = "3"}))
                </td>
            </tr>
            <tr>
                <td>
                    Dimension:
                </td>
                <td>
                    @(Html.TextBoxFor(m => Model.Dimension, new { @class = "t-input", @tabindex = "4" }))
                </td>
            </tr>
            <tr>
                <td>
                    Measurement System:
                </td>
                <td>
                    @(Html.Telerik().DropDownList()
                        .Name("measurementSystem")
                        .HtmlAttributes(new {@tabindex = 5})
                        .DropDownHtmlAttributes(new { style = "height: 200px" })
                        .SelectedIndex(MeasurementSystemIndex)
                        .BindTo(new SelectList(MeasurementSystemList))
                    )
                </td>
            </tr>
        </table>
        <div class="errorMsg">@Session["dataTypeMsg"]</div>
        @(Html.Telerik().Grid(dataTypeList)
            .Name("DataTypeGrid")
            .Scrollable(t => t.Height(250))
            .Sortable()
            .Filterable()
            //.DataBinding(binding => binding.Ajax().OperationMode(GridOperationMode.Client))
            .Columns(columns =>
                {
                    columns.Template(
                    @<text>
                        <input class="checkBox" name="checkedRecords" type="checkbox" value="@item.Id " title="checkedRecords" tabindex = "5" 
                            @if (dataTypeIds.Contains(item.Id) || checkedIds.Contains(item.Id))
                            {
                                <text>checked="checked"</text>
                            }
                        />
                    </text>)
                    .Title("").Width(36).HtmlAttributes(new { style = "text-align:center" });
                    columns.Bound(c => c.Name);
                    columns.Bound(c => c.Id);
                    columns.Bound(c => c.SystemType);
                    columns.Bound(c => c.Description);
                })
            )
        <div class="functions RPMbuttons">
        <font class="RPMbuttons" color="red">*</font>Please don't leave empty
        </div>
        <div class="submit RPMbuttons">
            <button name="create" value="create" type="submit" class="t-button"  id="saveButton" title="Save The Unit" tabindex = "6">Save</button>
            @Html.ActionLink("Cancel", "UnitManager", "Home", new { area = "RPM", @class = "t-button", @title = "Cancel", @tabindex = "7" })
        </div>       
    }

</div>
}
else
{
 <font color="red" style="margin:10px">Can't edit Unit doesn't exist anymore.</font>
}
    
<script type="text/jscript">
   
    $('.checkBox').change(function () {
        if ($(this).attr('checked'))
            $(this).attr('checked', true);
        else
            $(this).removeAttr('checked');

        var checked;

        $('.checkBox').each(function () {
            if ($(this).attr('checked')) {
                if (checked)
                    checked += "," + $(this).attr('value');
                else
                    checked = $(this).attr('value');
            }
        });
        var checkedIDs = checked.split(',');
        var data = { checkedIDs: checkedIDs };

        $.ajax({
            url: '/RPM/Home/setChecked',
            type: 'POST',
            data: JSON.stringify(data),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                //alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                //alert("success");
            },
            async: true,
            processData: false
        });
    });
</script>