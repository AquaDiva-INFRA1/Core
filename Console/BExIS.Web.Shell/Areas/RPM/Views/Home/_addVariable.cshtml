@using System.Data
@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@model BExIS.RPM.Model.DataStructureDesignerModel

@{
    ViewBag.Title = "Planing";

    long[] dataAttributeIds = new long[] { };
    Model.GetDataAttributeList();
    
    if((long)Session["dataStructureId"] != 0)
    {
        long id = (long)Session["dataStructureId"];
        Session["dataStructureId"] = id; 
    }
    
}

@if ((bool)Session["inUse"] == true)
{ 
    <p>Can't add variable Data Strucure in use</p>
}
else
{
    <script type="text/javascript">
    function toggleDiv(element){
    if(document.getElementById(element).style.display == 'none')
        document.getElementById(element).style.display = 'block';
    else
        document.getElementById(element).style.display = 'none';
    }
    </script>
    <div class="planingPartialDiv" id="createVariable">
        @using (Html.BeginForm("AddVariables", "Home", new { area = "RPM" }))
        {
            
            <button name="addVariables" value="add" type="submit" class="t-button">Save</button>
            <br />
            <br />
            @(Html.Telerik().Grid(Model.dataAttributeList)
            .Name("DataAttributeGrid")
            .Columns(columns =>
            {
                columns.Template(
                    @<text>
                            <input name="checkedRecords" type="checkbox" value="@item.Id " title="checkedRecords" 
                                @if (dataAttributeIds.Contains(item.Id))
                                {
                                    <text>checked="checked"</text>
                                }
                            />
                        </text>)
                    .Title("").Width(36).HtmlAttributes(new { style = "text-align:center" });

                //columns.Command(commands => commands.Select()).Title("Select");
                columns.Bound(c => c.Name);
                columns.Bound(c => c.Id);
                columns.Bound(c => c.ShortName);
                columns.Bound(c => c.Description);
                columns.Bound(c => c.Classification.Name)
                    .Title("Classification");
                columns.Bound(c => c.Unit.Name)
                    .Title("Unit");
                columns.Bound(c => c.DataType.Name)
                    .Title("Data Type");

            })
            )
            <br />
            <br />
            <button name="addVariables" value="add" type="submit" class="t-button">Save</button>
        }
    </div>
}