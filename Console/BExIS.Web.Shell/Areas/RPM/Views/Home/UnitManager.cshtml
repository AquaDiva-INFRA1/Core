@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@using BExIS.Dlm.Services.DataStructure
@using System
@using System.Text.RegularExpressions
@using BExIS.Web.Shell.Areas.RPM.Controllers

@{
    string rgxPattern = "[ ]";
    string rgxReplace = "_";
    Regex rgx = new Regex(rgxPattern);
    
    Unit unit = (Unit)Session["Unit"];
    string windowName = "Add";
    
    if (unit.Name != null && unit.Name != "")
    {
        windowName = rgx.Replace(unit.Name, rgxReplace);
    }
    else
    {
        windowName = "Add";
    }
    //var MeasurementSystemList = (from u in UnitList select u.MeasurementSystem.ToString()).Distinct();
    //var DimensionList = (from u in UnitList select u.Dimension.ToString()).Distinct();

    //var temp = MeasurementSystemList.Union(DimensionList);
    //temp = temp.Union((from u in UnitList select u.Name.ToString()).Distinct());
    //temp = temp.Union((from u in UnitList select u.Abbreviation.ToString()).Distinct());
    
    //List<string> Filters = temp.ToList();

    UnitManager UM = new UnitManager();
    List<Unit> model = UM.Repo.Get().ToList();
    
}

<!DOCTYPE html>

<html>
<head>
    <title>UnitManager</title>
</head>
@*<header>*@
    
@*</header> *@
<body>

    @Html.ActionLink("Add Unit", "openUnitWindow", "Home", new { id = 0 }, new { @class = "t-button t-add" })
    <br />
    <br />
    @(Html.Telerik().Grid(model)    
            .Name("UnitGrid")
            .Sortable()           
            .Columns(columns =>
                {
                    columns.Template(                            
                        @<text>
                            @if(!(item.DataContainers.Count > 0))
                            {
                            <div class="t-button t-button-icontext t-button-bare">
                            @Html.ActionLink("Edit", "openUnitWindow", "Home", new { id = item.Id }, new { @class = "t-icon t-edit" })
                            @Html.ActionLink("Delete", "deletUnit", "Home", new { id = item.Id }, new { @class = "t-icon t-delete" })
                            </div>
                            }
                            else
                            {
                                <div class="t-button t-button-icontext t-button-bare">locked</div>
                            }
                        </text>
                    ).Title("Functions")
                        .Width(50)
                        .ClientTemplate(
                            @Html.ActionLink("Edit", "openUnitWindow", "Home", new { id = "<#= id #>" }, new { @class = "t-icon t-edit" }).ToHtmlString() +
                            @Html.ActionLink("Delete", "deletUnit", "Home", new { id = "<#= id #>" }, new { @class = "t-icon t-delete" }).ToHtmlString()
                        );
                    columns.Bound(c => c.Name);
                    columns.Bound(c => c.Id);
                    columns.Bound(c => c.Description);
                    columns.Bound(c => c.Abbreviation);
                    columns.Bound(c => c.Dimension);
                    columns.Bound(c => c.MeasurementSystem);
                    columns.Template(
                        @<text>
                            @{string temp = "";
                              foreach (DataType dt in item.AssociatedDataTypes)
                              {
                                  if (temp== "") 
                                  {temp = dt.Name;}
                                  else  
                                  {temp = temp + ", " + dt.Name;}
                              }
                              }
                              @temp 
                        </text>
                    ).Title("Associated Data Types");
                })
    )
    <br />
    <br />
    @Html.ActionLink("Add Unit", "openUnitWindow", "Home", new { id = 0 }, new { @class = "t-button t-add" })
    

    <div style="position:absolute; left:20%; top:60px;">
                    @{ Html.Telerik().Window()
                            .Name(windowName)
                            .Visible((bool)Session["Window"])
                            .Draggable(true)
                            .Content(@<text>
                                        @Html.Partial("_editUnit", unit)
                                        </text>)
                            .Render()
                            ;
        
                    }
                    @{Session["Window"] = false;}
    </div>
</body>
</html>
