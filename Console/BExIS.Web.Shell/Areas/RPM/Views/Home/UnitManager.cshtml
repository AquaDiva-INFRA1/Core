@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@using BExIS.Dlm.Services.DataStructure
@using System
@using System.Text.RegularExpressions
@using BExIS.Web.Shell.Areas.RPM.Controllers
@model BExIS.Web.Shell.Areas.RPM.Models.UnitManagerModel

@*<header>*@
    <link href="@Url.Content("~/Areas/RPM/Stylesheets/RPM.css")" rel="stylesheet" type="text/css" />  
@*</header> *@

@{
    string temp = "";
    
    string windowName = "Create Unit";
    
    if(Model.editUnitStruct.Unit != new Unit())
    {
        if (Model.editUnitStruct.Unit.Name != null && Model.editUnitStruct.Unit.Name != "")
        {
            windowName = "Edit " + Model.editUnitStruct.Unit.Name;
        }
    }
    
}

@{
    ViewBag.Title = "Unit Manager";
}

@section Scripts{
  
}


    <div>
        <h2>Unit Manager</h2>
         
        <p>With this interface you are able to manage (e.g. create, edit, delete) units which may be needed to define data attributes. Units cannot be edited or deleted once they are associated with a data attribute (they become locked).</p>
    </div>

<br />
<div title="Create a new Unit">
    @Html.ActionLink("Create Unit", "openUnitWindow", "Home", new { id = 0 }, new { @class = "t-button t-add" })
</div>
<br />
<br />

    @(Html.Telerik().Grid(Model.UnitList)    
            .Name("UnitGrid")
            .Sortable()
            .Filterable() 
            .Scrollable(t => t.Height(440))         
            .Columns(columns =>
                {
                    columns.Template(
                        @<text>
                            
                            @if(!(item.DataContainers.Count > 0))
                            {
                            <div class="t-button t-button-icontext t-button-bare">
                            @Html.ActionLink("Edit", "openUnitWindow", "Home", new { id = item.Id }, new { @class = "t-icon t-edit" })
                            @Html.ActionLink("Delete", "deletUnit", "Home", new { id = item.Id, item.Name }, new { @class = "t-icon t-delete", onclick = "return confirm('Are you sure you want to delete the Unit " + item.Name +" ?')"})
                            
                            </div>
                            }
                            else
                            {
                                <div class="locked">locked</div>
                            }
                            
                        </text>
                    ).Title("Actions")
                        .Width(80)
                        .ClientTemplate(
                            @Html.ActionLink("Edit", "openUnitWindow", "Home", new { id = "<#= id #>" }, new { @class = "t-icon t-edit" }).ToHtmlString() +
                            @Html.ActionLink("Delete", "deletUnit", "Home", new { id = "<#= id #>", Model.editUnitStruct.Unit.Name }, new { @class = "t-icon t-delete", onclick = "return confirm('Are you sure you want to delete the Unit " + Model.editUnitStruct.Unit.Name + " ?')" }).ToHtmlString()
                            );
                    columns.Bound(c => c.Name).Width(150);
                    columns.Bound(c => c.Id).Width(50);
                    columns.Bound(c => c.Abbreviation).Width(100);
                    columns.Bound(c => c.Dimension.Name).Width(100);
                    columns.Bound(c => c.MeasurementSystem).Width(160);                        
                    columns.Template(
                        @<text>
                            @{
                                temp = "";
                                List<DataType> tempList = item.AssociatedDataTypes.OrderBy(p=>p.Name).ToList();
                                foreach (DataType dt in tempList)
                                {
                                    if (temp == "")
                                    { temp = dt.Name; }
                                    else
                                    { temp = temp + ", " + dt.Name; }
                                }
                              }
                              @temp 
                        </text>
                        )
                        .ClientTemplate("test")
                        .Title("Associated Data Types").Width(160);
                    columns.Bound(c => c.Description);
                })
    )
<br />
<br />
<br />
    

    <div style="position:absolute; left:20%; top:60px;">
                    @{ Html.Telerik().Window()
                            .Name("UintWindow")
                            .Title(windowName)
                            .ClientEvents((events => events.OnClose("close")))
                            .Draggable(true)
                            .Modal(true)
                            .Visible((bool)Session["Window"])
                            .Content(@<text>
                                        @Html.Partial("_editUnit", Model.editUnitStruct)
                                        </text>)
                            .Render()
                            ;
        
                    }        
    </div>
@{Session["Window"] = false;}

<script type="text/javascript">
    function close(e)
    {
        checkedIDs = new Array(0);
        var data = { checkedIDs: checkedIDs };
        $.ajax({
            url: '/RPM/Home/setChecked',
            type: 'POST',
            data: JSON.stringify(data),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                //alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                //alert("success");
            },
            async: true,
            processData: false
        });

        window.location.href = '/RPM/Home/UnitManager';
    }
</script>
   
@*<script type="text/javascript">

    $(".test")
        .click(function () {
            $('<div style="background-color: yellow;"></div>')
                .html('<div><h6> You are trying to delete! </h6></div>')
                .dialog({
                    modal: true, title: 'message', autoOpen: true,
                    width: '200', height: '150', resizable: false,
                    buttons: {
                        OK: function () {
                            $.post
                            $(this).remove();
                            $deletUnit();
                            doFunctionForOK();
                        },
                        Cancel: function () {
                            $(this).remove();
                            $(".test").val(false);
                        }
                    }
                });
        })
        .hover(function () {
            $(this).html("<b>test</b>")
        }, function () {
            $(this).text("test");
        });
</script>*@