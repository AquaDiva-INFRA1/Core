@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@using System
@using System.Text.RegularExpressions
@model List<DataType>

@{
    string rgxPattern = "[ ]";
    string rgxReplace = "_";
    Regex rgx = new Regex(rgxPattern);

    DataType dataType = (DataType)Session["DataType"];
    string windowName = "Add";

    if (dataType.Name != null && dataType.Name != "")
    {
        windowName = rgx.Replace(dataType.Name, rgxReplace);
    }
    else
    {
        windowName = "Add";
    }  
}

<!DOCTYPE html>

<html>
<head>
    <title>UnitManager</title>
</head>
@*<header>*@
    <link href="@Url.Content("~/Areas/RPM/Stylesheets/RPM.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery.isotope.min.js")" type="text/javascript"></script>  
@*</header> *@
<body>

    @Html.ActionLink("Add Data Type", "openDataTypeWindow", "Home", new { id = 0 }, new { @class = "t-button t-add" })
    <br />
    <br />
    @(Html.Telerik().Grid(Model)    
            .Name("UnitGrid")
            .Sortable()            
            .Columns(columns =>
                {
                    columns.Template(
                        @<text>
                            @Html.ActionLink("Edit", "openDataTypeWindow", "Home", new { id = item.Id }, new { @class = "t-icon t-edit" })
                            @Html.ActionLink("Delete", "deletDataType", "Home", new { id = item.Id }, new { @class = "t-icon t-delete" })
                        </text>
                    ).Title("Functions")
                        .Width(50)
                        .ClientTemplate(
                            @Html.ActionLink("Edit", "openDataTypeWindow", "Home", new { id = "<#= id #>" }, new { @class = "t-icon t-edit" }).ToHtmlString() +
                            @Html.ActionLink("Delete", "deletDataType", "Home", new { id = "<#= id #>" }, new { @class = "t-icon t-delete" }).ToHtmlString()
                        );
                    columns.Bound(c => c.Name);
                    columns.Bound(c => c.Id);
                    columns.Bound(c => c.Description);
                    columns.Bound(c => c.SystemType);
                   
                })
    )
    <br />
    <br />
     @Html.ActionLink("Add Data Type", "openDataTypeWindow", "Home", new { id = 0 }, new { @class = "t-button t-add" })
    
    <div style="position:absolute; left:20%; top:60px;">
                    @{ Html.Telerik().Window()
                            .Name(windowName)
                            .Visible((bool)Session["Window"])
                            .Draggable(true)
                            .Content(@<text>
                                        @Html.Partial("_editDataType", dataType)
                                        </text>)
                            .Render()
                            ;
        
                    }
                    @{Session["Window"] = false;}
    </div>

</body>
</html>
