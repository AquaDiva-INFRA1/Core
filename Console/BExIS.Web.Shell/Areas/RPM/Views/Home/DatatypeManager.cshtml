@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@using BExIS.Dlm.Services.DataStructure
@using System
@using System.Text.RegularExpressions
@model List<BExIS.Dlm.Entities.DataStructure.DataType>

@*<header>*@
    <link href="@Url.Content("~/Areas/RPM/Stylesheets/RPM.css")" rel="stylesheet" type="text/css" />  
@*</header> *@

@{
    DataType dataType = (DataType)Session["DataType"];
    string windowName = "Create Data Type";

    if(dataType != null)
    {
        if (!string.IsNullOrEmpty(dataType.Name))
        {
            windowName = "Edit Data Type: " + dataType.Name + " (Id: " + dataType.Id + ")";
        }
    }
    else
    {
        dataType = new DataType();
    }
}

@{
    ViewBag.Title = "Data Type Manager";
}

@section Information
{
    With this interface you are able to manage (e.g. create, edit, delete) data types which are required to define units and data attributes. Data types cannot be edited or deleted once they are associated with a unit (they become locked).
}

<div title="Create a new Data Type" class="bx-rpm-buttons">
    @Html.ActionLink("Create Data Type", "openDataTypeWindow", "Home", new { id = 0 }, new { @class = "t-button function" })
</div>

    @(Html.Telerik().Grid(Model)    
            .Name("bx-rpm-dataTypeGrid")
            .Sortable()
            .Filterable()           
            .Columns(columns =>
                {
                    columns.Template(
                        @<text>
                            @if(!(item.DataContainers.Count > 0))
                            {
                                <div>
                                    @Html.ActionLink("EDIT", "openDataTypeWindow", "Home", new { id = item.Id }, new { @class = "bx-button small" })
                                    @Html.ActionLink("DELETE", "deletDataType", "Home", new { id = item.Id, item.Name }, new { @class = "bx-button small", onclick = "return confirm('Are you sure you want to delete the Data Type " + item.Name + " ?')" })
                                </div>
                            }
                            else
                            {
                                <div style="text-align:center;"><button class="bx-button small bx-disabled">locked</button></div>
                            }
                        </text>
                    ).Title("Actions")
                        .Width(180)
                        .ClientTemplate(
                            @Html.ActionLink("EDIT", "openDataTypeWindow", "Home", new { id = "<#= id #>" }, new { @class = "t-icon t-edit" }).ToHtmlString() +
                            @Html.ActionLink("DELETE", "deletDataType", "Home", new { id = "<#= id #>", dataType.Name }, new { @class = "t-icon t-delete", onclick = "return confirm('Are you sure you want to delete the Data Type " + dataType.Name + " ?')" }).ToHtmlString()
                        );
                    columns.Bound(c => c.Name);
                    columns.Bound(c => c.Id);
                    columns.Bound(c => c.SystemType);
                    columns.Bound(c => c.Description);
                })
    )
    <br />
    <br />
    <div style="position:absolute; left:20%; top:60px;">
                    @{ Html.Telerik().Window()
                            .Name("DataTypeWindow")
                            .Title(windowName)
                            .Visible((bool)Session["Window"])
                            .Draggable(true)
                            .Modal(true)
                            .Content(@<text>
                                        @Html.Partial("_editDataType", dataType)
                                        </text>)
                            .Render()
                            ;
        
                    }
                    @{Session["Window"] = false;}
    </div>