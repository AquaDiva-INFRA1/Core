@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@using System
@using System.Text.RegularExpressions

@using BExIS.Web.Shell.Areas.RPM.Models;

@model DataAttributeManagerModel

@*<header>*@
    <link href="@Url.Content("~/Areas/RPM/Stylesheets/RPM.css")" rel="stylesheet" type="text/css" />  
@*</header> *@

@{
    string windowName = "Create Data Attribute";

  
        if (Model.DataAttributeModel.Id != 0)
        {
            if (!String.IsNullOrEmpty(Model.DataAttributeModel.Name))
            {
                windowName = "Edit Data Attribute: " + Model.DataAttributeModel.Name + " (Id: " + Model.DataAttributeModel.Id + ")";
            }
        }
}



@{
    ViewBag.Title = "Data Attribute Manager";
}
    <div>
        <h2>Data Attribute Manager</h2>
        
        <p>With this interface you are able to manage (e.g. create, edit, delete) data attributes which may be used as variables in data structures (a variable is an instance of an attribute). Data attributes cannot be edited or deleted once they are associated with a data structure (they become locked).</p>

    </div>

<div title="Create a new Data Attribute">
    @Html.ActionLink("Create Data Attribute", "openAttributeWindow", "DataAttribute", new { id = 0 }, new { @class = "t-button t-add" })
</div>
    <br />
    <br />
    @(Html.Telerik().Grid(Model.DataAttributeStructs)    
            .Name("Attribute")
            .Sortable()
            .Filterable()    
            .Scrollable(t => t.Height(450))         
            .Columns(columns =>
                {
                    columns.Template(
                        @<text>
                            @if(!item.InUse)
                            {
                                <div class="t-button t-button-icontext t-button-bare">
                                    @Html.ActionLink("Edit", "openAttributeWindow", "DataAttribute", new { id = item.Id }, new { @class = "t-icon t-edit" })
                                    @Html.ActionLink("Delete", "deletAttribute", "DataAttribute", new { id = item.Id, item.Name }, new { @class = "t-icon t-delete", onclick = "return confirm('Are you sure you want to delete the Data Attribute " + item.Name + " ?')" })
                                </div>
                            }
                            else
                            {
                                <div class="locked">locked</div>
                            }
                        </text>
                    ).Title("Actions")
                        .Width(80);
                        //.ClientTemplate(
                        //    @Html.ActionLink("Edit", "openAttributeWindow", "DataAttribute", new { id = "<#= id #>" }, new { @class = "t-icon t-edit" }).ToHtmlString() +
                        //    @Html.ActionLink("Delete", "deletAttribute", "DataAttribute", new { id = "<#= id #>", dataAttributeModel.Name }, new { @class = "t-icon t-delete", onclick = "return confirm('Are you sure you want to delete the Data Attribute " + dataAttributeModel.Name + " ?')" }).ToHtmlString()
                        //);
                    columns.Bound(c => c.Name).Width(150);
                    columns.Bound(c => c.Id).Width(50);
                    columns.Bound(c => c.ShortName).Width(100);
                    columns.Bound(c => c.Unit).Width(100)
                        .Title("Unit");
                    columns.Bound(c => c.DataType).Width(100)
                        .Title("DataType");
                    columns.Bound(c => c.FormalDescriptions).Width(300)
                        .Title("Constraints");
                    columns.Bound(c => c.Description);
                })
    )

    <br />
    <br />
    <div style="position:absolute; left:20%; top:60px;">
                    @{ Html.Telerik().Window()
                            .Name("AttributeWindow")
                            .Title(windowName)
                            .Modal(true)
                            .Visible((bool)Session["Window"])
                            .Draggable(true)
                            .Content(@<text>
                                        @Html.Partial("_editAttribute", Model.DataAttributeModel)
                                        </text>)
                            .Render()
                            ;
        
                    }
                    @{Session["Window"] = false;}
    </div>