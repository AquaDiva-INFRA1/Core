@using Telerik.Web.Mvc.UI
@using System.Linq;
@using BExIS.Dlm.Entities.DataStructure
@using BExIS.Web.Shell.Areas.RPM.Models

@model BExIS.Web.Shell.Areas.RPM.Models.DataAttributeModel

@if(Model != null)
{
    long unitIndex = 0;
    long dataTypeIndex = 0;
    string className = ""; 

    //if(Model.Unit != null)
    //{
    //    unitIndex = Model.Unit.Id;
    //}

    //dataTypeList = dataTypeList.OrderBy(p => p.Name).ToList();

    if (Model.DataType != null)
    {
        dataTypeIndex = Model.DataType.Id;
    } 
    
<div class="planingPartialDiv" id="createAttribute">
@using (Html.BeginForm("editAttribute", "DataAttribute", new { area = "RPM" }))
{
   @(Html.HiddenFor(m=>m.Id, new {@class = "hidden"})) 
    <table class="bx-rpm-info">
        <tr>
            <td id="name" style="width:120px">
                Name:<Font color="red">*</Font>
            </td>
            <td>
                @(Html.TextBoxFor(m => Model.Name, new {@class = "t-input bx-input", @autofocus = "autofocus", @tabindex = "1"}))
            </td>
            <td rowspan="4" style="vertical-align:top;width:110px">
                Description:
            </td>
            <td rowspan="4" style="vertical-align:top;">
                @(Html.TextAreaFor(m => Model.Description, new {@class = "t-input bx-textarea", @style="min-height: 100px;", @tabindex = "3"}))
            </td>
        </tr>
        <tr id="shortname">
            <td>
                ShortName:
            </td>
            <td>
                @(Html.TextBoxFor(m => Model.ShortName, new {@class = "t-input  bx-input", @tabindex = "2"}))
            </td>
        </tr>
        <tr>
            <td>
                Unit:
            </td>
            <td>
                <div>
                    <span>@Html.DropDownListFor(m => Model.Unit.Id, new SelectList(Model.Units, "Id", "Name"), new { @tabindex = "4", @id = "unitId", @class = "t-input bx-dropdown bx-rpm-dropdown" })</span>
                    <span class="t-arrow-down bx-rpm-dropdownArrow"/>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                DataType:
            </td>
            <td>
                @Html.DropDownListFor(m => Model.DataType.Id, new SelectList(Model.DataTypes, "Id", "Name"), new { @tabindex = "5", @id= "dataTypeId", @class = "bx-dropdown bx-rpm-dropdown" })
                <div class="t-arrow-down bx-rpm-dropdownArrow"></div>
            </td>
        </tr>
        <tr>
            <td class="errorMsg" colspan="4">@Session["nameMsg"]</td>
        </tr>
        <tr>
            <td colspan="4" class="bx-rpm-container">
                <h4><a href="javascript:clickConstraints()">Constraints</a></h4>
            </td>
        </tr>
        <tr id="constraints" style="display:none">
            <td colspan="4" class="bx-rpm-container">
                

                @if(Model.DomainConstraints.Count > 0 || Model.RangeConstraints.Count > 0 || Model.PatternConstraints.Count > 0)
                {    
                    className =  "";
                }
                else
                {
                    className = "constraints";
                }
                           
                @if (Model.RangeConstraints.Count > 0)
                {
                    @Html.Partial("_rangeConstraintView", Model.RangeConstraints.FirstOrDefault())
                }
                else
                { 
                    @Html.Partial("_rangeConstraintView", new RangeConstraintModel())
                }
                        

                @if (Model.PatternConstraints.Count > 0)
                {
                    @Html.Partial("_patternConstraintView", Model.PatternConstraints.FirstOrDefault())
                }
                else
                { 
                    @Html.Partial("_patternConstraintView", new PatternConstraintModel());
                }
                        
                   
                @if (Model.DomainConstraints.Count > 0)
                {
                    @Html.Partial("_domainConstraintView", Model.DomainConstraints.FirstOrDefault())
                }
                else
                { 
                    @Html.Partial("_domainConstraintView", new DomainConstraintModel());
                }
                    
            </td>
        </tr>
</table>


    
    <div class="bx-rpm-functions bx-rpm-buttons">
        <font class="bx-rpm-buttons" color="red">*</font> Indicates required field
    </div>
    <div class="bx-rpm-submit bx-rpm-buttons">
        <button name="create" value="create" type="submit" class="t-button action"  id="saveButton" title="Save The Unit" tabindex = "6">Save</button>
        @Html.ActionLink("Cancel", "AttributeManager", "DataAttribute", new { area = "RPM", @class = "t-button action", @title = "Cancel", @tabindex = "7" })
    </div>  
               
}
</div>
    
<script type="text/jscript">
   
    $('#unitId').change(function () {

        $.getJSON('/RPM/DataAttribute/getDatatypeList/' + $(this).val(), function (data) {
            

            var items = '';
            $.each(data, function (i, dataType) {
                items += "<option value='" + dataType.Value + "'>" + dataType.Text + "</option>";
            });
            $('#dataTypeId').html(items);
        });
    })
   
    $(document).ready(function () {
        $.getJSON('/RPM/DataAttribute/getDatatypeList/' + $('#unitId').val(), function (data) {
            var items = '';
            $.each(data, function (i, dataType) {
                if (dataType.Value == @dataTypeIndex)
                    items += "<option selected='selected' value='" + dataType.Value + "'>" + dataType.Text + "</option>"; 
                else
                    items += "<option value='" + dataType.Value + "'>" + dataType.Text + "</option>";
            });
            $('#dataTypeId').html(items);
        });
    })


    function clickConstraints()
    {
        $('#constraints').toggle();
    }

</script>    
}
else
{
 <font color="red" style="margin:10px">Can't edit Data Attribute doesn't exist anymore.</font>
}
