

@{
    List<List<string>> values = (List<List<string>>)ViewData["values"];
    List<List<string>> labels = (List<List<string>>)ViewData["labels"];
    int number_of_graphs = labels.Count();
    int number_of_rows = (int)Math.Round((float)(1 / 2) + (float)number_of_graphs / (float)5);
    Int32 index = 0;
}


@{
    <script src = "https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.js" ></ script >
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/hammerjs@2.0.8"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@0.7.0"></script>

    <link rel = "stylesheet" href = "https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.css" />
    
}


<div>
    <table>
        <tr>
            <td>
                <h2>Statistical Overview</h2>
            </td>
            <td>
                <div id="preloaderContainer" />
            </td>
        </tr>
    </table>
</div>



<!-- Create a div where the graph will take place -->
<table >
    @while (index <= number_of_graphs)
    {
        <tr>
            @for (int k = 0; k < 3; k++)
            {
            <td>
                <canvas id="myChart_@index"></canvas>
            </td>
                index = index + 1;
            }
        </tr>
    }


</table>



<script type="text/javascript">

    $.ajax({
        url: '/asm/analytics/getGraphData',
        type: 'POST',
        success: function (resp) {
            var myJSON = JSON.parse(resp);

            Object.keys(myJSON).forEach(function (entry) {

                var element = myJSON[entry];

                var xdata = element[0];
                var xlabel = xdata[0];
                var xvalues = xdata[1].replace('[', '').replace(']', '').split(",");

                var ydata = element[1];
                var ylabel = ydata[0];
                var yvalues = ydata[1].replace('[', '').replace(']', '').split(",");
                
                //if (xlabel != ylabel){
                    var data_ = [];
                    for (var z = 0; z < yvalues.length; z++) {
                        data_.push ({x: xvalues[z] , y: yvalues[z]});
                    }
                    var id = "myChart_" + entry;
    
                    var scatterChartData = {
                        datasets: 
                        [{
                                data: data_
			            }]
                    };
    
                    var ctxSc = document.getElementById(id).getContext('2d');
                    var config1 = new Chart.Scatter(ctxSc, {
                        type: 'Line',
                        data: scatterChartData,
                        options: {
                            title: {
                                display: true,
                                text: 'distribution of ' + xlabel + ' towards ' + ylabel,
                            },
                            scales: {
                                xAxes: [{
                                    position: 'bottom',
                                    title : xlabel
                                }],
                                yAxes: [{
                                    stacked: true,
                                    title : ylabel
                                }]
                            },
                            pan: {
			                        enabled: true,
			                        mode: 'xy',
                                    speed: 0.1
		                        },
		                        zoom: {
			                        enabled: true,
			                        mode: 'xy',
			                        speed: 0.1
		                        }
                        }
                    });
    
                //}
            });
        },
        error: function (e) {
            alert('Error: ' + e);
        }
    });

</script>





