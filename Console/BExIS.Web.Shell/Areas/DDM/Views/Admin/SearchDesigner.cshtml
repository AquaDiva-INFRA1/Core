@model List<SearchAttributeViewModel>

@using BExIS.Ddm.Model;
@using BExIS.Web.Shell.Areas.DDM.Models;

@{
    ViewBag.Title = "Manage Search Component";

    bool windowVisible = false;
    bool isPrimaryDataNodeExist = false;
    
    SearchAttributeViewModel selectedSA = new SearchAttributeViewModel();
    
    if(ViewData["windowVisible"]!=null)
    {
        windowVisible = (bool)ViewData["windowVisible"];
    }

    if (ViewData["selectedSearchAttribute"] != null)
    {
        selectedSA = (SearchAttributeViewModel)ViewData["selectedSearchAttribute"];
    }

    if (Session["IncludePrimaryData"] != null)
    {
        isPrimaryDataNodeExist = (bool)Session["IncludePrimaryData"];
    }

}

@section Information
        {

    With this interface you are able to customize the search component and define what fields of the
    metadata are searchable and how they appear in the application. Changes made through the interface will
    alter the Lucene configuration file on the server. For a detailed description of each parameter please
    refer to the Lucene User Manual provided with the installation package.
}

@*@section Scripts{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
}*@


    @if (ViewData.ModelState.IsValid)
    {
    
    <div style="float:left;">
        @Html.ActionLink("Add Item", "Add", "Admin", new { @class = "t-button function", @title = "Add Search Item" })

        @Html.CheckBox("includePrimaryDataCheckBox",isPrimaryDataNodeExist) <b>include primary data</b>  
    </div> 

    <div id="#searchDesigerOptions" style="float:right; padding-bottom:5px;">  
        
        @Html.ActionLink("Refresh Search", "RefreshSearch", "Admin", new { @class = "t-button action", @title = "Refresh index from search" })

        @Html.ActionLink("Reset to last working setup", "ResetConfig", "Admin", new { @class = "t-button function", @title = "Reset to Default" })
    </div>   


    <br />
    <br />
    @(Html.Telerik().Grid(Model)
            .Name("SearchDesignerGrid")
            
                .DataBinding(dataBinding => dataBinding
                    .Ajax()
                    .Select("_CustomSearchDesignerGridBinding", "Admin")
                )


                .Columns(columns =>
                {
                    columns.Template(
                             @<text>
                                @Html.ActionLink("Edit", "Edit", "Admin", new { id = item.id }, new { @class = "bx-button small", @title = "Open edit form" })
                                @Html.ActionLink("Delete", "Delete", "Admin", new { id = item.id }, new { @class = "bx-button small", @title = "Delete search item", onclick = "return confirm('Are you sure you want delete the search attribute " + item.displayName + " ?')" })
                            </text>

                     ).Title("Actions")
                     .Width(160)
                        .ClientTemplate(
                            @Html.ActionLink("Edit", "Edit", "Admin", new { id = "<#= id #>" }, new { @class = "bx-button small", @title = "Open edit form" }).ToString() +
                            @Html.ActionLink("Delete", "Delete", "Admin", new { id = "<#= id #>" }, new { @class = "bx-button small", @title = "Delete search item" }).ToString()
                        );

                    columns.Bound(o => o.displayName).Width(200);
                    columns.Bound(o => o.searchType).Width(180);//.ClientTemplate("<input type='text' name='Search Type' value='@Enum.GetName(typeof(SearchComponentBaseType)', Convert.ToInt32("<#= searchType #>") )' />");//.ClientTemplate(Enum.GetName(typeof(SearchComponentBaseType), Convert.ToInt32("<#= searchType #>") ));
                    columns.Bound(o => o.dataType).Width(100);
                    columns.Bound(o => o.headerItem).ClientTemplate("<input type='checkbox' disabled='disabled' name='Header Item' <#= headerItem ? checked='checked' : '' #> />").Width(100);
                    columns.Bound(o => o.defaultHeaderItem).ClientTemplate("<input type='checkbox' disabled='disabled' name='Default Header Item' <#= defaultHeaderItem ? checked='checked' : '' #> />").Width(150);
                    columns.Bound(o => o.multiValue).ClientTemplate("<input type='checkbox' disabled='disabled' name='Multi Value' <#= multiValue ? checked='checked' : '' #> />").Width(100);
                    columns.Bound(o => o.analysed).ClientTemplate("<input type='checkbox' disabled='disabled' name='Analysed' <#= analysed ? checked='checked' : '' #> />").Width(100);
                    columns.Template(
                        @<text>
                            @{
                                foreach (string dt in item.metadataNames)
                                {
                                  <span>@dt <br/></span>
                                }
                              }
                        </text>
                    )
                    .ClientTemplate("<#= loadClientTemplate(metadataNames) #>");


                })

            .Sortable()
            .Scrollable()
        
            )




@(Html.Telerik().Window()

    .Name("EditSearchAttribute")
    .Visible(windowVisible)
    .Title("Edit")
    .Modal(true)
    .Draggable(true)
    .Width(0)
    .Height(500)
    .ClientEvents(events => events
            .OnActivate("EditSearchAttribute_resizeOnRefresh")
            .OnClose("EditSearchAttribute_onClose")
    )
    .Buttons(buttons => buttons.Close())
    .Content(@<text>
        <div id="showSearchAttribute-resultGrid" class="showSearchAttribute"  >
             @Html.Partial("_editSearchAttribute", selectedSA)
        </div>
    </text>
    )
)


<script type="text/javascript">

    function EditSearchAttribute_resizeOnRefresh() {
        var winContent = $('#EditSearchAttribute .t-window-content');
        //winContent.css("height", "");

        var detailwindow = $("#EditSearchAttribute").data("t-window");

        detailwindow.center();
    }

    function EditSearchAttribute_onClose() {
        $('.t-state-selected[title*="Edit"]').removeClass('t-state-selected');

            $.post('@Url.Action("CloseWindow", "Admin", new RouteValueDictionary { { "area", "DDM" } })', function (response) {

            })

        $(".t-grid .t-refresh").trigger('click');
    }
    
    $("#includePrimaryDataCheckBox").change(function(e)
    {
        //alert($("#includePrimaryDataCheckBox").is(':checked'));
        var includePrimaryData = $("#includePrimaryDataCheckBox").is(':checked');
           
            $.post('@Url.Action("ChangeIncludePrimaryData", "Admin", new RouteValueDictionary { { "area", "DDM" } })', { includePrimaryData: includePrimaryData }, function (response) {
        })
    })

 </script>
    
    }
    else
    { 
        @Html.ValidationSummary(true);
    }

<style type="text/css">

    #SearchDesignerGrid .t-grid-content
    {
        height:auto !important;
        overflow:auto;
        max-height:490px;
    }

    #SearchDesignerGrid .t-grid-content td
    {
      padding-left:0;
    }

    #SearchDesignerGrid .t-grid-content a.fa
    {
        text-decoration:none;
        margin-right:5px;
    }

    #SearchDesignerGrid .t-status 
    {
       display:none;
    }

    #EditSearchAttribute
    {
        width:750px;
    }

</style>

<script type="text/javascript">

    function loadClientTemplate(data)
    {
        var template = ""

        for (var i = 0; i < data.length ; i++)
        {
            template += "<span>" + data[i] + "<br/></data>";
        }
        
        return template;
    }

</script>
