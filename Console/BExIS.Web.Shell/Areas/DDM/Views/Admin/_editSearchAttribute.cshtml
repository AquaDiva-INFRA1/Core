@model SearchAttributeViewModel

@using BExIS.Ddm.Model;
@using BExIS.Web.Shell.Areas.DDM.Models;

@{
    
    string Title="New Search Attribute";

    if (Model.displayName != null)
    {
        Title = Model.displayName;
    }
        

    // enums to list
    // metadatanodes to list  

    List<string> SearchComponentBaseType = new List<string>();
    foreach (SearchComponentBaseType ms in Enum.GetValues(typeof(SearchComponentBaseType)))
    {
        SearchComponentBaseType.Add(ms.ToString());
    }

    List<string> DataType = new List<string>();
    foreach (TypeCode ms in Enum.GetValues(typeof(TypeCode)))
    {
        DataType.Add(ms.ToString());
    } 
    
    //for properties

    List<string> Directions = new List<string>();
    foreach (Direction ms in Enum.GetValues(typeof(Direction)))
    {
        Directions.Add(ms.ToString());
    }

    List<string> UiComponents = new List<string>();
    foreach (UiComponent ms in Enum.GetValues(typeof(UiComponent)))
    {
        UiComponents.Add(ms.ToString());
    }

    List<string> AggregationTypes = new List<string>();
    foreach (AggregationType ms in Enum.GetValues(typeof(AggregationType)))
    {
        AggregationTypes.Add(ms.ToString());
    }

    List<SearchMetadataNode> metadataNodes = new List<SearchMetadataNode>();
    if (Session["metadatNodes"]!=null)
    {
        metadataNodes = (List<SearchMetadataNode>)Session["metadatNodes"];
    }
    

 }

@using (Ajax.BeginForm("Save", "Admin", new AjaxOptions {
    HttpMethod = "Post",
    UpdateTargetId = "searchAttributeForm",
    OnSuccess = "OnSuccess",
    OnFailure = "OnFailure"
}))
{
    <h3> @Title </h3>
    <hr />
    <div id="searchAttributeForm" style="height:410px; overflow:auto">
    @{
    #region names and link to metadata
        <b>General</b>
        <hr />
        <div id="saNames" style="width:auto" class="searchAttributePart" >
            <table>
                <tr>
                    <td >
                         @(Html.LabelFor(m => m.id))
                         @(Html.HiddenFor(m => m.id))
                    </td>
                    <td>
                       @Html.DisplayFor(m => m.id)
                    </td>
                </tr>
                <tr>
                    <td>
                         @(Html.LabelFor(m => m.displayName))
                    </td>
                    <td>
                        @(Html.TextBoxFor(m => m.displayName, new { @class = "t-input" }))

                        <label title="Display name of the item in the search user interface.">?</label>

                        @Html.ValidationMessageFor(m => m.displayName)
                    </td>
                </tr>
                <tr>
                    <td>
                         @(Html.LabelFor(m => m.sourceName))
                    </td>
                    <td>
                        @(Html.TextBoxFor(m => m.sourceName, new { @class = "t-input" }))

                        <label title="Name of the field in the lucene index.">?</label>

                         @Html.ValidationMessageFor(m => m.sourceName)
                    </td>
                </tr>
                <tr>
                    <td>
                        @(Html.LabelFor(m => m.metadataNames))
                    </td>
                    <td>
                        <div id="metadataNodes">

                            @if (Model.metadataNames != null && Model.metadataNames.Count > 0)
                            {
                                foreach (var xpath in Model.metadataNames)
                                {
                                    Html.RenderPartial("_metadataNode", xpath);
                                }
                            }
                        </div>

                        <div>
                            @Html.ActionLink(" ", "AddMetadataNode", null, new { id = "addNode", @class = "fa bx-add" })
                            <label title="Corresponding metadata node to be used for the Lucene index.">?</label>
                            @Html.ValidationMessageFor(m => m.metadataNames)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        @(Html.LabelFor(m => m.headerItem))
                    </td>
                    <td>
                         @Html.CheckBoxFor(m => m.headerItem)
                         <label title="Tick if this item should be available as a category (e.g. as a grid column).">?</label>

                    </td>
                </tr>
                <tr>
                    <td>
                        @(Html.LabelFor(m => m.defaultHeaderItem))
                    </td>
                    <td>
                         @Html.CheckBoxFor(m => m.defaultHeaderItem)
                         <label title="Tick if the header item should be visible upon page load.">?</label>
                    </td>
                </tr>
            </table>
       </div> 
    #endregion

    #region types
        <br />
        <b>Type</b>
        <hr />
        <div id="saTypes" style="width:600px" class="searchAttributePart">
            <table>
                <tr>
                    <td>
                        @(Html.LabelFor(m => m.searchType))
                    </td>
                    <td>
                         @Html.DropDownListFor(m => m.searchType, new SelectList(SearchComponentBaseType, Model.searchType), "Select, please")
                         <label title="Search pattern to be used for this item.">?</label>
                    </td>
                </tr>
                <tr>
                    <td>
                       @(Html.LabelFor(m => m.dataType))
                    </td>
                    <td>
                         @Html.DropDownListFor(m => m.dataType, new SelectList(DataType, Model.dataType), "Select, please")
                         <label title="Data type to be indexed.">?</label>
                    </td>
                </tr>

            </table>
        </div>
                            #endregion

                            #region parameter
         <br />
        <b>Index Parameters</b>
        <hr />
        <div id="saParameters" style="width:600px" class="searchAttributePart">
            <table>
                <tr>
                    <td>
                       @(Html.LabelFor(m => m.store))
                    </td>
                    <td>
                         @Html.CheckBoxFor(m => m.store)
                         <label title="Tick to store the entire item value in addition to the index.">?</label>
                    </td>
                </tr>
                <tr>
                    <td>
                       @(Html.LabelFor(m => m.multiValue))
                    </td>
                    <td>
                         @Html.CheckBoxFor(m => m.multiValue)
                         <label title="Tick if this item contains multiple values per field (e.g. Name A; Name B; Name C).">?</label>
                    </td>
                </tr>
                <tr>
                    <td>
                       @(Html.LabelFor(m => m.analysed))
                    </td>
                    <td>
                          @Html.CheckBoxFor(m => m.analysed)
                         <label title="Tick if this item should be analyzed for the index (default).">?</label>
                    </td>
                </tr>
                <tr>
                    <td>
                        @(Html.LabelFor(m => m.norm))
                    </td>
                    <td>
                       @Html.CheckBoxFor(m => m.norm)
                       <label title="....">?</label>
                    </td>
                </tr>
                <tr>
                    <td>
                       @(Html.LabelFor(m => m.boost))
                    </td>
                    <td>
                       @Html.TextBoxFor(m => m.boost, new { type = "number", min = "0.0" })
                       <label title="Specify the priority of this item within the search index (10=highest priority).">?</label>
                    </td>
                </tr>
            </table>
        </div>
                            #endregion

                            #region properties
        <br />
        <b>Property Parameters</b>
        <hr />
        <div id="saProperties" style="width:600px" class="searchAttributePart">
            <table>
                <tr>
                    <td>
                        @(Html.LabelFor(m => m.uiComponent))
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.uiComponent, new SelectList(UiComponents, Model.uiComponent))
                       <label title="Choose a UI component Type according to the number of options (1-3  = item, 3-15 = list, >15= range).">?</label>
                    </td>
                    <td>
                        
                    </td>
                </tr>
                <tr>
                    <td>
                        @(Html.LabelFor(m => m.aggregationType))
                    </td>
                    <td>

                        @Html.DropDownListFor(m => m.aggregationType, new SelectList(AggregationTypes, Model.aggregationType))
                        <label title="Choose a selection type based how many choices should be allowed (single, multiple).">?</label>
                    </td>
                </tr>
                <tr>
                    <td>
                        @(Html.LabelFor(m => m.direction))
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.direction, new SelectList(Directions, Model.direction))
                        <label title="Default sort direction for this item (ascending, descending).">?</label>
                    </td>
                </tr>
                @*<tr>
                    <td>
                        @(Html.LabelFor(m => m.dateFormat))
                    </td>
                    <td>
                        bgc:format
                    </td>
                    <td>
                        metadata node providing the date format
                    </td>
                </tr>*@
            </table>
        </div>
     #endregion
    }
    </div>
    <hr />
    <button type="submit" value="Save" name="submit"  class="t-button " style="border:0px;">save</button>
}

<script type="text/javascript">


    var run = false;
    $("#addNode").unbind().click(function () {


            $.ajax({
                url: this.href,
                cache: false,
                success: function (html) { $("#metadataNodes").append(html); }
            });

        return false;
    });

    $("a.removeMetadataNode").live("click", function () {
        $(this).parents("div.metadataNode:first").remove();
        return false;
    });


    function OnSuccess() {
        
        var window = $('#EditSearchAttribute').data('tWindow');
        window.close();

        @*$.post('@Url.Action("SearchDesigner", "Admin", new RouteValueDictionary { { "area", "DDM" } })', function (response) {
            $("body").html(response);
        })*@

    }

    function OnFailure(response) {
        alert("failed");
    }

</script>

<style type="text/css">

    .searchAttributePart table, .searchAttributePart td,.searchAttributePart tr
    {
        border:none;
    }
</style>