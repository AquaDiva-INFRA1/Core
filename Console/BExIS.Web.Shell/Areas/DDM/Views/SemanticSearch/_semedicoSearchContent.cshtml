@model BExIS.Modules.Ddm.UI.Models.ShowSemanticResultModel
@using Telerik.Web.Mvc.UI;
@using BExIS.Modules.Ddm.UI.Models;


<!--TreeView for results of the semedico search-->


<div id="overlay" style="background:#bee1da;border-top:#bee1da;">
    <div class="semedicoSearchContentOverlay" id="facetsOverlay">
        <div class="overlayContent">
            @{
                <h3>Semedico search results</h3>
            }

            @{
        if ((Model != null) && (Model.resultListComponent != null))
        {
            <ul>
                        @{
                    for (int id = 0; id < Model.resultListComponent.bibliographylist.Count; id++)
                    {
                        Bibliographylist pub = Model.resultListComponent.bibliographylist.ElementAt(id);
                        String formattedTitle = pub.articleTitle;

                        //Format the display String to F.Lastname: Title
                        if (!(pub.authors == null) && !(pub.authors.Count <= 0))
                        {
                            Author firstAuthor = pub.authors.First();
                            if (!String.IsNullOrEmpty(firstAuthor.lastname))
                            {
                                formattedTitle = firstAuthor.lastname + ": " + formattedTitle;
                            }
                            if (!String.IsNullOrEmpty(firstAuthor.firstname))
                            {
                                formattedTitle = firstAuthor.firstname[0] + ". " + formattedTitle;
                            }
                        }
                        if (id == 0 && Model.resultListComponent.bibliographylist.Count > 1)
                        {
                            <a class="detailsLink" href="@Url.Action("ShowDetails", "SemanticSearch", new { id = id })">
                                <li class="semedicoResult" id="firstSemedicoResult"><div class="resultContainer">@formattedTitle</div></li>
                            </a>
                    //Alternative: only text clickable
                    //<li class="semedicoResult" id="firstSemedicoResult"><div class="resultContainer">@Html.ActionLink(pub.articleTitle, "showDetails", new { id = id })</div></li>
                }
                else if (id == (Model.resultListComponent.bibliographylist.Count - 1))
                {
                    <a class="detailsLink" href="@Url.Action("ShowDetails", "SemanticSearch", new { id = id })">
                        <li class="semedicoResult" id="lastSemedicoResult"><div class="resultContainer">@formattedTitle</div></li>
                    </a>
            //Alternative: only text clickable
            //<li class="semedicoResult" id="lastSemedicoResult"><div class="resultContainer">@Html.ActionLink(pub.articleTitle, "showDetails", new { id = id })</div></li>
        }
        else
        {
            <a class="detailsLink" href="@Url.Action("ShowDetails", "SemanticSearch", new { id = id })">
                <li class="semedicoResult"><div class="resultContainer">@formattedTitle</div></li>
            </a>
    //Alternative: only text clickable
    //<li class="semedicoResult"><div class="resultContainer">@Html.ActionLink(pub.articleTitle, "showDetails", new { id = id })</div></li>
}
}
                        }
                    </ul>
            
        }
            }
        </div>
        <div>
            @{
                if ((Model != null) && (Model.resultListComponent != null) &&
                    ((Model.resultListComponent.subsetstart - Model.resultListComponent.subsetsize) >= 1))
                {
                    //Button for loading the previous results - triggers new ajax http-request
                    <button id="prevButton" type="button" style="float: left">
                        <i id="spinner2" class="fa fa-spinner fa-spin" style="display:none"></i>Previous
                    </button>
                }

                if ((Model != null) && (Model.resultListComponent != null) &&
                    ((Model.resultListComponent.subsetstart + Model.resultListComponent.subsetsize) < Model.resultListComponent.countallresults))
                {
                    //Button for loading the next results - triggers new ajax http-request
                    <button id="nextButton" type="button" style="float: right">
                        <i id="spinner" class="fa fa-spinner fa-spin" style="display:none"></i>Next
                    </button>
                }

            }
        </div>

    </div>
</div>





<!--Additional Window, only visible when needed-->
<!--Shows the details of the selected publication-->
<div style="position:absolute; left:calc(50% - 350px); top:15%;">
    @{
        if (Model != null && Model.detailsComponent != null)
        {

            @(Html.Telerik().Window().ClientEvents(ev => ev.OnClose("onCloseWindow"))
                                                                                    .Name("Details")
                                                                                    .Visible((bool)Session["Window"])
                                                                                    .Content(@<text>
                                                                                        <div id="SemedicoSearchDetailWindow" style="width:700px">
                                                                                            <h2 style="margin-bottom : -10px">@Model.detailsComponent.Title</h2>
                                                                                            <div>
                                                                                                @{
                                                                                                            foreach (String author in Model.detailsComponent.FormattedAuthors)
                                                                                                            {
                                                                                                        <h4>@author</h4>
                                                                                                            }
                                                                                                }
                                                                                            </div>
                                                                                            <b><a href="javascript:toggle('publishedDiv')">Published in</a></b>
                                                                                            <div id="publishedDiv" style="display:none">
                                                                                                @Model.detailsComponent.Publication
                                                                                            </div>
                                                                                            <div></div>
                                                                                            <b><a href="javascript:toggle('abstractDiv')">Abstract</a></b>
                                                                                            <div id="abstractDiv" style="display:none">
                                                                                                @Model.detailsComponent.AbstractText
                                                                                            </div>
                                                                                            <div>
                                                                                                @{
                                                                                                            int i = 0;
                                                                                                            foreach (Object o in Model.detailsComponent.Links)
                                                                                                            {
                                                                                                                if (i == 0)
                                                                                                                {
                                                                                                            <a href="javascript:toggleGroup('linkDiv')"><b>External Links</b></a>
                                                                                                                    i++;
                                                                                                                }
                                                                                                        <div class="linkDiv" style="display:none"><a href=@o>@o</a></div>
                                                                                                            }

                                                                                                }
                                                                                            </div>
                                                                                        </div>
                                                                                    </text>)
                                                                                   .Draggable(true)
                                                                                   .Modal(true)
            )
        }
    }

</div>

<!--Making sure the window doesn't show up on page reload-->
@{
    Session["Window"] = false;
}




<script type="text/javascript">
    $("#nextButton").click(function () {
        $('#spinner').show();
        $('#nextButton').prop('disabled', true);
        $.ajax({
            complete: function () {
                $('#spinner').hide();
                $('#nextButton').prop('disabled', false);
            },
            url: "/DDM/SemanticSearch/nextPage",
            type: "get",
            success: function (result) {
                $("#semedicoSearchContentContainer").html(result);
            }
        });
        
    })

    $("#prevButton").click(function () {
        $('#spinner2').show();
        $('#prevButton').prop('disabled', true);
        $.ajax({
            complete: function () {
                $('#spinner2').hide();
                $('#prevButton').prop('disabled', false);
            },
            url: "/DDM/SemanticSearch/prevPage",
            type: "get",
            success: function (result) {
                $("#semedicoSearchContentContainer").html(result);
            }
        });
    })

</script>

<script type="text/javascript">
    function handleOnSelect(e) {
        // `this` is the DOM element of the treeview
        var treeview = $(this).data('tTreeView');

        var nodeElement = e.item;

        // event handling code
        //Figure out the number of this node
        var parent = nodeElement.parentNode;
        var children = parent.children;
        var number = 0;
        for (var i = 0; i < children.length; i++) {
            var child = parent.children[i];
            if (child == nodeElement)
                number = i;
        }
    }

    function onCloseWindow(e) {
        //Make sure the search-content-grid is visible again
        $.ajax({
            url: "../refreshGridDisplay",
            type: "get",
            success: function (result) {
                $("#searchContent").html(result);
            }
        });
    }

    function toggle(id) {
        var e = document.getElementById(id);

        if (e.style.display == "none") {
            e.style.display = "";
        } else {
            e.style.display = "none";
        }
    }

    function toggleGroup(classname) {
        var e = document.getElementsByClassName(classname);

        for (var i = 0; i < e.length; i++) {
            if (e[i].style.display == "none") {
                e[i].style.display = "";
            } else {
                e[i].style.display = "none";
            }
        }

    }

    
</script>

<style>
    #facetsOverlay li,
    #facetsOverlay .t-dropdown {
        width: 100%;
        border-color: #72b1a0;
    }

        #facetsOverlay .PropertyHeader,
        #facetsOverlay .t-dropdown .t-select {
            text-transform: uppercase;
            color: #72b1a0;
        }

    .semedicoResult {
        text-decoration: none;
        text-emphasis: none;
    }

    ul {
        padding-left: 2px;
        padding-right: 2px;
        list-style-type: none;
    }

    .resultContainer {
        background: #72b1a0;
        margin: 10px;
        padding-left: 5px;
        padding-right: 5px;
    }

    .detailsLink {
        color: #000000;
    }

    #lastSemedicoResult {
        padding-bottom: 5px;
    }

    .overlayContent h3 {
        padding-left: 20px;
        padding-top: 5px;
        margin-top: 26px;
        padding-bottom: 5px
    }

    .fa {
        margin-left: -12px;
        margin-right: 8px;
    }
</style>