@model System.Data.DataTable
@using BExIS.Utils.Models;
@using System.Data;
@using BExIS.Dlm.Entities.DataStructure;
@using Telerik.Web.Mvc.UI;

@{

    int PageSize = Convert.ToInt16(ViewData["PageSize"]);
    int CurrentPage = Convert.ToInt16(ViewData["CurrentPage"]);
    List<HeaderItem> DefaultHeaderList = (List<HeaderItem>)ViewData["DefaultHeaderList"];
    HeaderItem Id = (HeaderItem)ViewData["ID"];


    StructuredDataStructure sds = new StructuredDataStructure();
    Tuple<StructuredDataStructure, long> defaultModel = new Tuple<StructuredDataStructure, long>(sds, 0);


    GridPagerStyles pagerStyles = GridPagerStyles.PageSizeDropDown;
    pagerStyles |= GridPagerStyles.NextPreviousAndNumeric;
    pagerStyles |= GridPagerStyles.Numeric;

}

@{
    //Only show grid if the details window isn't visible, otherwise rendering problems
    if (!(bool)Session["Window"])
    {
        @(Html.Telerik().Grid<System.Data.DataRow>()
        .Name("resultGrid")

            .DataBinding(dataBinding => dataBinding
            .Ajax()
            .Select("_CustomBinding", "SemanticSearch", new { area = "DDM" })
            )

            .EnableCustomBinding(true)
            .HtmlAttributes(new { @class = "result-grid" })
            .Columns(columns =>
            {

                if (Model != null)
                {
                    for (int i = 0; i < Model.Columns.Count; i++)
                    {
                        DataColumn column = Model.Columns[i];
                        if (DefaultHeaderList.Any(p => p.Name.Equals(column.ColumnName)))
                        {
                            string title;
                            if (column.Caption == "")
                            {
                                title = column.ColumnName;
                            }
                            else
                            {
                                title = column.Caption;
                            }

                            columns.Bound(column.DataType, column.ColumnName)
                                .Title(title);
                        }
                        else
                        {
                            columns.Bound(column.DataType, column.ColumnName).Hidden()
                                   .Title(column.Caption);

                        }
                    }
                }

                if (Model != null)
                {
                    if (@Model.Columns.Count > 0)
                    {
                        //Additional column with the "View Details"-Button
                        columns.Bound("").Width(40).ClientTemplate(
                        "<div class='searchResultFunctionDiv'>" +
                        "<a  id='<#= " + @Model.Columns[Id.Name].ColumnName + "#>' class = 'bx bx-grid-function bx-show' title = 'View details' onclick='onclickDataset(this)'></a>" +
                        "</div>"
                        )

                       .Groupable(false)
                       .Sortable(false)
                       .Filterable(false);

                    }
                }

            })

            .ClientEvents(events => events
                        .OnRowDataBound("resultGrid_OnRowDataBound")
                        .OnDataBound("onDataBound")
                        .OnColumnShow("resultGrid_OnColumnChanged")
                        .OnColumnHide("resultGrid_OnColumnChanged")

                        )
            .Sortable()
            .Pageable(paging => paging.Style(pagerStyles))
            .ColumnContextMenu()


        )
    }
}



<script type="text/javascript">

	$('document').ready(function () {

		$('.t-filter').attr("title", "Filter");

	})

	function resultGrid_OnColumnChanged(e)
	{
	}


	function resultGrid_OnRowDataBound(e) {

	}

	function onclickDataset(e) {

        //checked
	    var id = e.getAttribute("id");


	    var data = {
	        id: id
        }

	    $.ajax({
	        url: '/DDM/Data/IsDatasetCheckedIn',
	        type: 'POST',
	        data: JSON.stringify(data),
	        dataType: 'json',
	        contentType: 'application/json; charset=utf-8',
	        error: function (xhr) {
	            alert('Error: ' + xhr.statusText);

	        },
	        success: function (result) {
	            if (result) {
	                window.top.location = "/DDM/Data/ShowData/" + id;
	            } else {

                    alert("Dataset is locked. Please try again later.");
	            }
	        }
	    });
	}


	function onDataBound()
	{
	    resetAllTelerikIconTitles();
	    addTooltips();
	}


</script>

<style type="text/css">
    #resultGrid .t-grid-content {
        position: relative;
        height: auto !important;
        max-height: 450px;
        /*overflow:auto;*/
    }

    #resultGrid .t-status,
    #resultGrid .t-status-text {
    }

    #resultGrid .searchResultFunctionDiv {
        text-align: right;
    }
</style>