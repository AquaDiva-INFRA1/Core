@using BExIS.Ddm.Model;
@using BExIS.Web.Shell.Areas.DDM.Helpers;

@model Tuple<SearchModel,IEnumerable<Facet>>
           
<div id="searchTreeView" >
@(Html.Telerik().TreeView()
       .Name("TreeView")
       .ShowCheckBox(true)
       .ExpandAll(true)
       
       .ClientEvents(events => events
                           .OnSelect("onSelect")
                           .OnDataBound("onDataBound")
                           .OnChecked("onChecked")
                           .OnLoad("onLoad")
                           )

                       .BindTo<Facet>(Model.Item1.SearchComponent.Facets, (item, facet) =>
                       {

                           item.Text = facet.DisplayName + " (" + facet.Count + ")";
                           item.Value = facet.Name;
                           item.Enabled = true;
                           item.Checkable = false;
                           item.Checked = false;
                           item.Expanded = true;
                           item.LinkHtmlAttributes["class"] = "searchFacet, t-headeritem";
                           item.LinkHtmlAttributes["title"] = facet.Text + " (" + facet.Count + ")";


                           var l = from f in facet.Childrens
                                   orderby f.Count descending, f.Name
                                   select f;


                           foreach (Facet t in l)// @facet.Childrens)
                           {
                               t.Parent = facet;
                               bool IsSelected = Model.Item1.CriteriaComponent.ContainsFacet(t);


                               if (item.Items.Count() < 5 && t.Count > 0 || IsSelected)
                               {

                                   TreeViewItem subitem = new TreeViewItem();
                                   item.Items.Add(subitem);

                                   subitem.Text = t.Text + " (" + t.Count + ")";
                                   //subitem.Text = t.Text;
                                   
                                   //subitem.Parent = item;
                                   subitem.Value = t.Name;
                                   subitem.Enabled = true;//t.Enabled;
                                   subitem.Checked = IsSelected;
                                   subitem.Selected = IsSelected;
                                   subitem.LinkHtmlAttributes["class"] = "searchFacet, t-item-child";
                                   subitem.ActionName = "OnSelectTreeViewItem";
                                   subitem.ControllerName = "Home";
                                   subitem.LinkHtmlAttributes["title"] = t.Text + " (" + t.Count + ")";
                                   subitem.Action("OnSelectTreeViewItem", "Home", new RouteValueDictionary { { "area", "DDM" }, { "SelectedItem", subitem.Value }, { "Parent", item.Value } });
                               }

                           }

                           //Get Count from Facets
                           int count = Model.Item2.Where(p => p.Name == facet.Name).FirstOrDefault().Count;
                   
                           
                           if (item.Items.Count < count && count > 0)
                           {
                               TreeViewItem moreBt = new TreeViewItem();

                               moreBt.Text = "more";
                               moreBt.Value = "more";
                               moreBt.Enabled = true;
                               moreBt.Selected = false;
                               moreBt.Checkable = false;
                               moreBt.LinkHtmlAttributes["title"] = "more";
                               moreBt.LinkHtmlAttributes["class"] = "t-item-more";

                               if (!item.Items.Contains(moreBt))
                                   item.Items
                                       .Add(moreBt);

                           }
                       }
          ))
</div>

   @(Html.Telerik().Window()

    .Name("MoreWindow")
    .Visible(false)
    .Title("Change selection")
    .Width(450)
    .Modal(true)
    .Draggable(true)
    .ClientEvents(events => events
        .OnActivate("resizeOnRefresh")
        .OnClose("onClose")
    )
    .Buttons(buttons => buttons.Close())
    .Content(@<text>
       @Html.Partial("_windowCheckBoxList", new SearchModel())
    </text>
    )
)




<script type="text/javascript">

    $(document).ready(function () {
        $('#searchTreeView').resize(function () {
            OnResizeLeft();
            
        });
    })

  

    function OnResizeLeft() {


        $('.searchFacet').each(function () {

            //$(this).trunk8();

            //if (!$(this).attr("title") == true) { 
            var n = $("#searchTreeView").width() - 90;
            var text = $(this).text();

            //Link Breiter als/ oder gleich breit Container
            if ($(this).width() >= n) {

                $(this).width(n);

                var t = $(this).attr("title");
                var nt = t.split(" ");
                var ntLast = nt.pop();
                $(this).trunk8(
                {
                    fill: "..." + ntLast
                });


            }
            //Link kürzer als Container
            else if (text.indexOf(".") != -1 || text == '' || text == null) {

                var l = $(this).text().length
                if (l == 0) {
                    l=1
                }

                var w = $(this).width()
                if (w == 0) {
                    w = 1
                }

                var m = w / l;

                m = Math.round(m).toFixed(0);
                
                var t = $(this).attr("title");
                var maxWidth = t.length * m;
                maxWidth = maxWidth + 20;

                if (maxWidth >= n) {
                    $(this).width(n);
                }
                else {

                    $(this).width(maxWidth);
                }

                var nt = t.split(" ");
                var ntLast = nt.pop();


                $(this).trunk8(
                    {
                        fill: "..." + ntLast
                    });
            }


        });

    }

    function treeView() {
        return $('#TreeView').data('tTreeView');
    }

    function moreWindow() {
        return $('#MoreWindow').data('tWindow');
    }

    function onSelect(e) {

        //alert("test");
        // if it is a root node then a selection expand or collapse this tree element
        var selectedItem = treeView().getItemText(e.item);
        var selectedItemValue = treeView().getItemValue(e.item);
            var parent = $(e.item.parentNode).closest('.t-item').find(':input[name*="Value"]').val();
            var detailWindow = $("#MoreWindow").data("tWindow");
            e.item.Selected = false;

            if (selectedItem == "more") {

                var detailWindow = $("#MoreWindow").data("tWindow");


                $.post('@Url.Action("ShowMoreWindow", "Home", new RouteValueDictionary { { "area", "DDM" } })', { parent: parent }, function (response) {
                    $("#search_more").html(response);
                })


                detailWindow.center().open();
            }


            if (parent == null) {
                if (e.item.hidden) {
                    treeView().collapse(e.item);
                   
                }
                else {

                    treeView().expand(e.item);
                    
                } 
            }
    }



    function onChecked(e) {

        
        var selectedItem = treeView().getItemText(e.item)
        var selectedItemValue = treeView().getItemValue(e.item)
        var parent = $(e.item.parentNode).closest('.t-item').find(':input[name*="Value"]').val();
        var parentItem = e.item;
       
        treeView().disable(parentItem);

        // find all checkboxes and disable it during server request
        facets_disable();

        $.post('@Url.Action("CheckedTreeViewItem", "Home", new RouteValueDictionary { { "area", "DDM" } })', { SelectedItem: selectedItemValue, Parent: parent }, function (response) {
            $("#searchTreeView").html(response);
            facets_disable();

            if (false) {
                alert('test');
                $.post('@Url.Action("UpdateFacets", "Home", new RouteValueDictionary { { "area", "DDM" } })', {}, function (response) {
                    $("#searchTreeView").html(response);
                })
            }
            $.post('@Url.Action("GetDataForBreadCrumbView", "Home", new RouteValueDictionary { { "area", "DDM" } })', {}, function (response) {
                //alert(response);
                $("#breadCrumb").html(response);
            });

            facets_enable();
        })

        refreshGrid();
    }


    function facets_disable() {
        $("#TreeView").find("input:checkbox")
                                 .attr("disabled", true);
    }

    function facets_enable() {
        $("#TreeView").find("input:checkbox")
                                 .attr("disabled", false);
    }

    function onDataBound(e) {
        refreshTree()
    }

    function onLoad(e) {

        refreshTree()
    }

    function refreshTree() {
       $(".t-treeView .t-refresh").trigger('click');
    }

    function resizeOnRefresh() {
        var winContent = $('#MoreWindow .t-window-content');
        winContent.css("height", "");
    }

    function onClose() {
        $('.t-state-selected[title*="more"]').removeClass('t-state-selected');
    }

</script>
         