@model Tuple<DataStructure, long>
@using BExIS.Ddm.Model;
@using System.Data;
@using BExIS.Dlm.Entities.DataStructure;
@using BExIS.Web.Shell.Areas.DDM.Helpers;

@{
    
    //Model.item1 = SearchResultPreview
    //Model.item2 = DatasetId

    GridPagerStyles pagerStyles = GridPagerStyles.PageSizeDropDown;
    pagerStyles |= GridPagerStyles.NextPreviousAndNumeric;
    pagerStyles |= GridPagerStyles.Numeric;

}


@if (@Model.Item1 != null)
{ 
    <div style="text-align:left">
        <h2>@Model.Item1.Self.Name</h2>
        <p>@Model.Item1.Self.Description</p>
    </div>
    
}

@if(Model.Item1.Self is StructuredDataStructure)
{
    long id = Model.Item2;
    DataTable dt = new DataTable();
    if (Model.Item1 != null)
    {
        if (Model.Item2 > 0)
        {
            dt = SearchUIHelper.ConvertStructuredDataStructureToDataTable((StructuredDataStructure)Model.Item1.Self);//Model.Item1.ConvertToDataTable();
        }
    }
    
    
    if (Model.Item2 > 0)
    { 
        @(Html.Telerik().Grid<System.Data.DataRow>()
                .Name("dataStructureGrid")

                    .DataBinding(dataBinding => dataBinding
                        .Ajax()
                        .OperationMode(GridOperationMode.Client)
                        .Select("_CustomDataStructureBinding", "Data", new { datasetID = id })
                    )
                    .HtmlAttributes(new { @class = ".t-grid-without-filter" })
                    .EnableCustomBinding(true)

                    .Columns(columns =>
                    {
                    for (int i = 0; i < dt.Columns.Count; i++)
                    {
                        DataColumn column = dt.Columns[i];

                        if (column.ColumnName.ToLower() == "optional")
                        {
                            columns.Bound(column.DataType, column.ColumnName)
                                .ClientTemplate("<input id='<#= " + column.ColumnName + "#>' name='<#= " + column.ColumnName + "#>' type='checkbox' value='<#= " + @dt.Columns["Optional"] + "#>' class='bx-disabled bx-ddm-checkbox' disabled = 'disabled' />").Title(column.ColumnName);
                        }
                        else
                        {
                                    columns.Bound(column.DataType, column.ColumnName);
                                }
                    }
})
                    .ClientEvents(events => events
                            .OnDataBound("onDataBound")
                        )

                    .Pageable(paging =>
                        paging.PageSize(10)
                        .Position(GridPagerPosition.Both)
                    )

                    .ColumnContextMenu()
        )
    }
}

<br />

<script type="text/javascript">
    function onDataBound()
    {
        resetAllTelerikIconTitles();

        for (var i = 0; i < $(".bx-ddm-checkbox").length; i++)
        {
            if ($(".bx-ddm-checkbox")[i].getAttribute('value') == "True")
            {
                $(".bx-ddm-checkbox")[i].setAttribute('checked','checked')
            }
        }
    }
</script>
<style type="text/css">
    #dataStructureGrid td
    {
        text-align:left;
    }

    #dataStructureGrid th
    {
        padding-left:30px;
    }

    #dataStructureGrid .t-status-text
    {
        display:none;
    }
</style>