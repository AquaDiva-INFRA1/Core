@using Telerik.Web.Mvc.UI
@using BExIS.Web.Shell.Areas.RBM.Models.Booking;

@model List<PersonInConstraint>

@{
    GridPagerStyles pagerStyles = GridPagerStyles.Numeric;
    pagerStyles |= GridPagerStyles.NextPreviousAndDropDown;
}

<div>
    @(Html.Telerik().Grid(Model)
                .Name("Grid_Users")
                .HtmlAttributes(new { style = "width:500px" })
                .DataKeys(keys =>
                {
                    keys.Add(r => r.UserId);
                })
                .Columns(columns =>
                {
                    columns.Bound(r => r.Index).Hidden().HtmlAttributes(new { name = "constraintIndex" });
        //columns.Bound(r => r.ConstraintType).Hidden().HtmlAttributes(new { name = "constraintType" });
        columns.Bound(r => r.UserFullName).Width(50);
                    columns.Template(
                                @<text>
                                    <div id="checkboxesUserSelect">
                                        @Html.CheckBox("selected_userId_" + item.UserId, item.IsSelected, new { id = @item.UserId, OnChange = "changeUserSelection(this)" })
                                    </div>
                                </text>
                                       ).Title(" ")
                                       .Width(40)
                                       .ClientTemplate(
                                           @Html.CheckBox("<#= UserId #>", new { id = "UserId", OnChange = "changeUserSelection(this)" }).ToHtmlString()
                                       ).Width(30)
                          .ClientTemplate(
                              @Html.CheckBox("IsContact").ToHtmlString()
                          ).Width(30);


                       })
                         .ClientEvents(clientEvents => clientEvents
                         .OnDataBound("onDataBound")
                                                               )
                         .Filterable()
                         .Sortable(sortable => sortable
                         .OrderBy(orderby => orderby
                         .Add(r => r.UserId).Descending()))
                          .Pageable(paging =>
                                                   paging
                                                       .Style(pagerStyles)
                                                       .PageSize(10)
                                                       .Position(GridPagerPosition.Bottom)
                                                       )
                                                                                               //.Scrollable()
    )
    <br />
    <div class="bx-rpm-submit bx-rpm-buttons">
        <button class="bx-button action" name="AddUsersToSchedule" onclick="AddSelectedUsers()">Add users to constraint</button>
    </div>
</div>
<script type="text/javascript">

    function onDataBound() {
        resetAllTelerikIconTitles();
        addTooltips();
    }

    function changeUserSelection(e) {

        var userId = e.id;
        var selected = "";

        var index = $("td[name=constraintIndex]:first").text();

        if ($(e).is(':checked')) {
            selected = "true";
        }
        else {
            selected = "false";
        }

        $.get('@Url.Action("ChangeSelectedUserConstraint", "Resource")', { userId: userId, selected: selected, index: index }, function (data) {
        });
    }

    function AddSelectedUsers() {

        var index = $("td[name=constraintIndex]:first").text();

        $.post('@Url.Action("AddUsersToConstraint", "Resource", new RouteValueDictionary { { "area", "RBM" } })', { index: index }, function (data) {
            $('#users_' + index).html(data);
            Window_Choose_OnClose();
        });
    }

    function Window_Choose_OnClose() {
        var window = $('#Window_ChooseUsers').data('tWindow');
        window.close();
    }

</script>