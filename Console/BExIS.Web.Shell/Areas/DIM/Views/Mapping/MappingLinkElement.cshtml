@using BExIS.Dim.Entities.Mapping
@model BExIS.Web.Shell.Areas.DIM.Models.Mapping.LinkElementModel
@{
    string selectorClass = "le-mapping-simple-selector-" + @Model.Position.ToString().ToLower();
    string id = Model.Type + "_" + Model.ElementId + "_" + @Model.Position + "_" + @Model.Name;
    string c = "le-simple-" + @Model.Position;
}

<div id="@id" class="le-mapping-complex">
    <div class="le-mapping-complex-info" style="display: none">
        <div id="Id">@Model.Id</div>
        <div id="Name">@Model.Name</div>
        <div id="ElementId">@Model.ElementId</div>
        <div id="Type">@Model.Type</div>
        <div id="Position">@Model.Position</div>
        <div id="XPath">@Model.XPath</div>
    </div>

    <div class="le-mapping-container-header row">
        <div class="le-mapping-container-header-label col-md-8">
            @Model.Name
        </div>
        <div class="col-md-offset-3 col-md-1">
            <span class="bx bx-delete small right" onclick="deleteComplexMappingElement(this)"></span>
        </div>
    </div>

    <div class="mapping-container-childrens">
        @foreach (var child in Model.Children)
        {
            if (child.Complexity.Equals(LinkElementComplexity.Simple))
            {
                <div class="le-simple le-simple-selector @selectorClass" title="@child.Description">

                    <div class="le-simple-header">
                        @child.Name
                    </div>
                </div>
            }
            else
            {
                <div class="le-complex" title="@child.Description">

                    <div class="le-complex-header">
                        @child.Name
                    </div>
                </div>
            }
        }
    </div>
</div>
