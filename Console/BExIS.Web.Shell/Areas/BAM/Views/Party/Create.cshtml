@model BExIS.Web.Shell.Areas.BAM.Models.PartyModel
@section Information
{}
@{
    bool hasErrors = false;
    string errorMessage = "";
    string errorClass = "";
}
@if (Model.Errors != null && Model.Errors.Count() > 0)
{
    hasErrors = true;
}

@if (hasErrors == true)
{
    errorClass = "bx-input-error";
    foreach (var item in Model.Errors)
    {
        if (Model.Errors.First().Equals(item))
        {
            errorMessage = item.GetMessage();
        }
        else
        {
            errorMessage += ", " + item.GetMessage();
        }
    }
}

<p>Please provide the following information.</p>
@using (Html.BeginForm("Create", "Party",new { area = "BAM" }, FormMethod.Post,new { id = "frmParty" }))
{
    <table>
        <tr>
    <td><b title="Required" style="color: red">*</b></td>
    <td style="width:300px;">
        @Html.LabelFor(m => m.Party.PartyType)
    </td>
    <td>
        @(Html.Telerik().DropDownList()
                            .Placeholder("--- SELECT ---")
                              .HtmlAttributes(new { Title = @errorMessage, @style = "width:250px; ", @class = "bx-dropdown " + @errorClass })
                                    .Name("Party.PartyType.Id")
                                    .BindTo(new SelectList(Model.PartyTypeList, "Id", "Title", Model.Party.PartyType.Id))
                                    .ClientEvents(events => events.OnChange("OnChangePartyType"))  )
        @Html.ValidationMessageFor(m => m.Party.PartyType.Id, "Select party type")
        <img src="@Url.Content(Themes.GetResourcePath("Styles/Default", "loading.gif"))" style="display:none" id="imgPartyCustomeAttrLoading" />
    </td>
</tr>
        <tr>
            <td style="width:40px;"><b title="Required" style="color: red">*</b></td>
            <td>
                @Html.LabelFor(m => m.Party.Name)
            </td>
            <td>
               
                 <input data-val="true" data-val-required="Name is required." style="border: 2px solid black; width: 250px;"
                       id="PartyName" name="Party.Name" type="text" value="">
                @Html.ValidationMessageFor(c=>c.Party.Name)
            </td>
        </tr>
     
        <tr>
            <td><b title="Required" style="color: red">*</b></td>
            <td>
                @Html.LabelFor(m => m.Party.StartDate)
            </td>
            <td>
                @(Html.Telerik().DatePickerFor(m => m.Party.StartDate)
                                .HtmlAttributes(new { @style = "width:275px; " })
                               )
            </td>
        </tr>
        <tr>
            <td><b title="Required" style="color: red">*</b></td>
            <td>
                @Html.LabelFor(m => m.Party.EndDate)
            </td>
            <td>
                @(Html.Telerik().DatePickerFor(m => m.Party.EndDate).HtmlAttributes(new { @style = "width:275px; " }))
                
            </td>
        </tr>
        <tr>
            <td><b title="Required" style="color: red">*</b></td>
            <td>
                @Html.LabelFor(m => m.Party.Description)
            </td>
            <td>
                @Html.EditorFor(m => m.Party.Description, new { Title = @errorMessage, @class = "bx-textarea " + @errorClass })
                @Html.ValidationMessageFor(m => m.Party.Description)
            </td>
        </tr>
    </table>

    <br />
    <div id="divPartyCustomAttr"></div>
    <div id="divPartyRelation"></div>
<br />
<button type="submit" name="submit" value="AddPartyRelationships" class="t-button" style="border:0px;">Create and Add Party Relationships</button>
<button type="submit" name="submit" value="saveDataset" class="t-button" style="border:0px;">Create Party</button>
}
@*<button type="button" value="Add Relations" onclick="AddRelations"  class="t-button" style="border:0px;">Add  Relations</button>*@

<script type="text/javascript">
    function AddRelations(e) {
    }
    function OnChangePartyType(e) {
        var partyTypeId = e.value;
        $('#imgPartyCustomeAttrLoading').show();
        $('#divPartyCustomAttr').load('/BAM/Party/LoadPartyCustomAttr/' + partyTypeId, function (response, status, xhr) {
            
            if (status == "error") {
                $('#divPartyCustomAttr').html("")
                alert(response);
            }
           $('#imgPartyCustomeAttrLoading').hide();
        });
        
    }
    $(function () {
        //parsing the unobtrusive attributes when we get content via ajax
        $(document).ajaxComplete(function () {
            var $form = $("#frmParty");
            // Unbind existing validation
            $form.unbind();
            $form.data("validator", null);

            // Check document for changes
            $.validator.unobtrusive.parse(document);

            // Re add validation with changes
            $form.validate($form.data("unobtrusiveValidation").options);
        });
    });
        

</script>
