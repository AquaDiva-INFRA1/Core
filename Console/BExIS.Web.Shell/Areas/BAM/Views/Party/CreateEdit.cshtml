@model BExIS.Modules.Bam.UI.Models.PartyModel
@{
    bool createMode = (Model.Party.PartyType.Id == 0);
    bool addRelationship = true;
    if (Request.QueryString["relationTabAsDefault"] != null)
    {
        addRelationship = true;
        <script type="text/javascript">
            $(document).ready(function(){
                $("#divSubmitButtons").hide();
            });
        </script>
    }
    else
    { addRelationship = (bool)ViewBag.RelationTabAsDefault; }
    bool hasErrors = false;
    string errorMessage = "";
    string errorClass = "";
}
@if (Model.Errors != null && Model.Errors.Count() > 0)
{
    hasErrors = true;
}

@if (hasErrors == true)
{
    errorClass = "bx-input-error";
    foreach (var item in Model.Errors)
    {
        if (Model.Errors.First().Equals(item))
        {
            errorMessage = item.GetMessage();
        }
        else
        {
            errorMessage += ", " + item.GetMessage();
        }
    }
}

 <span style="color:red">@errorMessage</span>
@using (Html.BeginForm("CreateEdit", "Party", new { area = "BAM" }, FormMethod.Post, new { id = "frmParty" }))
{
    @Html.HiddenFor(m => m.Party.Id)
    @(Html.Telerik().TabStrip()
            .Name("ShowDataTabStrip").ClientEvents(item => item.OnLoad("onLoad"))
            .SelectedIndex(addRelationship ? 2 : 0).ClientEvents(events => events.OnSelect("tabSelected"))
            .Items(tabs =>
            {
                tabs.Add()
                        .Text("Party").Content(@<text>
                    <table class="bx-table-form" id="tblParty">
                        <tr>
                            <td><b title="Required" style="color: red">*</b></td>
                            <td style="width:300px;">
                                @Html.LabelFor(m => m.Party.PartyType)
                            </td>
                            <td>
                                @if (!createMode)
                                {
                                    @Html.HiddenFor(m => m.Party.PartyType.Id)
                                    @Model.Party.PartyType.Title
                                }
                                else
                                {
                                    @Html.Telerik().DropDownList().Placeholder("--- SELECT ---").Name("Party.PartyType.Id").HtmlAttributes(new { style = "width:372px; padding-left: 2px;", @class = "t-input bx-input" }).DropDownHtmlAttributes(new { style = "width:372px;", @class = "t-input bx-input" }).BindTo(new SelectList(Model.PartyTypeList, "Id", "DisplayName")).ClientEvents(events => events.OnChange("OnChangePartyType"))

                                    @Html.ValidationMessageFor(m => m.Party.PartyType.Id, "Select party type")
                                    <img src="~/Content/Images/info.png" data-toggle="tooltip" title="Party type" />
                                    <img src="@Url.Content(Themes.GetResourcePath("Styles/Default", "loading.gif"))" style="display:none" id="imgPartyCustomeAttrLoading" />
                                }

                            </td>
                        </tr>
                        <tr>
                            <td><b title="Required" style="color: red">*</b></td>
                            <td>
                                @Html.LabelFor(m => m.Party.StartDate)
                            </td>
                            <td>
                                @(Html.Telerik().DatePickerFor(m => m.Party.StartDate)
                                    .HtmlAttributes(new { @Style = "border:none;display: inline-block;width:398px" })
                                )
                                
                              </td>
                        </tr>
                        <tr>
                            <td><b title="Required" style="color: red">*</b></td>
                            <td>
                                @Html.LabelFor(m => m.Party.EndDate)
                            </td>
                            <td>
                                @(Html.Telerik().DatePickerFor(m => m.Party.EndDate).HtmlAttributes(new { @Style = "border:none;display: inline-block;width:398px" }))
                                <div id="divDatesError"></div>
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                                @Html.LabelFor(m => m.Party.Description)
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.Party.Description, new { Title = @errorMessage, @class = "t-input bx-input " + @errorClass })
                                @Html.ValidationMessageFor(m => m.Party.Description)
                                <img src="~/Content/Images/info.png" data-toggle="tooltip" title="Description" />
                            </td>
                        </tr>
                    </table>
                        </text>);
                tabs.Add().Text("Custom Attributes").Enabled((createMode ? false : true)).Content(@<text>
                            <div id="divPartyCustomAttr"></div>
                </text>);
                tabs.Add().Text("Relationships").Enabled((createMode ? false : true)).Content(@<text>
                    @Html.Partial("_partyRelationshipsPartial", Model)
                </text>);
            })
    )
    <div id="divSubmitButtons" style="background-color: rgb(245, 245, 245); margin-top: -2px;">
        <button type="submit" id="submitBtn" class="t-button" style="border:0px;" onclick="return submitClick();">@(createMode ? "Next" : "Save")</button>
         @Html.ActionLink("Cancel", "Index", "Party", new { area = "BAM" })
    </div>
}
<div id="divPartyRelation"></div>
<script type="text/javascript">

    var partyTabStrip =undefined;


    //if it is in create mode and the first tab is activate;it opens the next tab
    function submitClick()
    {
        checkDateRange();
        var validationError=false;
        var $form = $("#frmParty");
        $form.valid();
        $(".t-item", partyTabStrip.element).each(function(index,element){

            if ($(partyTabStrip.getContentElement(index)).find(".input-validation-error").length)
            {
                partyTabStrip.select(element);
                validationError=true;
                if(index!=0)
                    $("#submitBtn").html("Save and add relationships");
                return false;
            }
        });
        if ('@createMode'=='True' && !validationError)
        {
            if(partyTabStrip.getSelectedTabIndex()==0)
            {
                var customAttrTab=$(".t-item", partyTabStrip.element)[1];
                partyTabStrip.select(customAttrTab);
                $("#submitBtn").html("Save");
                return false;
            }
        }
        return true;
    }

    function checkDateRange() {
        $parentElement = $("#tblParty");
        startDate = new Date($parentElement.find("[id*='StartDate']").val());
        endDate = new Date($parentElement.find("[id*='EndDate']").val());
        $warningElement = $parentElement.find("#divDatesError");
        if ((startDate > endDate))
            //first span should be there for the class and is not usable because of automatic changing by validation 
            $warningElement.html("<span class='input-validation-error' ></span><span id='endDateValidation-error' style='background-color: #ffeeee;border: 1px solid #ff0000;'>End date should be equal or greater than start date.</span>");
        else
            $warningElement.html("");       
    }

    function OnChangePartyType(e) {
        var partyTypeId = e.value;
        if (!partyTypeId)
            partyTabStrip.disable($(".t-item", partyTabStrip.element)[1]);
        else {
            partyTabStrip.enable($(".t-item", partyTabStrip.element)[1]);
            $('#imgPartyCustomeAttrLoading').show();
            $('#divPartyCustomAttr').load('/BAM/Party/LoadPartyCustomAttr/' + partyTypeId+'?partyId='+@Model.Party.Id, function (response, status, xhr) {
                if (status == "error") {
                    $('#divPartyCustomAttr').html("")
                    alert(response);
                }
                $('#imgPartyCustomeAttrLoading').hide();
            });
        }
    }
    function tabSelected(tab)
    {
        if($(tab.item).text()=="Relationships")
            $("#divSubmitButtons").hide();
        else
            $("#divSubmitButtons").show();
    }


    //Enable dynamic validation in every ajax request because they will disable each time
    $(function () {
        //parsing the unobtrusive attributes when we get content via ajax
        $(document).ajaxComplete(function () {
            var $form = $("#frmParty");
            // Unbind existing validation
            $form.unbind();
            $form.data("validator", null);
            // Check document for changes
            $.validator.unobtrusive.parse(document);
            // Re add validation with changes
            $form.validate($form.data("unobtrusiveValidation").options);
        });
    });
    function onLoad(){
        partyTabStrip = $("#ShowDataTabStrip").data("t-TabStrip");
        if ('@createMode'=='False')
        {
            OnChangePartyType({value:@Model.Party.PartyType.Id });
        }
    }

</script>