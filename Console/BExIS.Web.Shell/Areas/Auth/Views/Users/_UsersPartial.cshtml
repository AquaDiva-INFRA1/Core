@using Telerik.Web.Mvc.UI
@using BExIS.Web.Shell.Areas.Auth.Models;

@model List<UserGridRowModel>

@(Html.Telerik().Grid(Model)
        .Name("Grid_Users")
        .DataKeys(keys =>
        {
            keys.Add(r => r.Id);
        })
        .ToolBar(command =>
            {
                command.Custom().Name("Create").Text("New User").Ajax(true).ButtonType(GridButtonType.ImageAndText).ImageHtmlAttributes(new { @class = "t-icon t-add" });
            })
        .Columns(columns =>
        {
            columns.Command(command =>
            {
                command.Custom("Update").Ajax(true).ButtonType(GridButtonType.BareImage).ImageHtmlAttributes(new { @class = "t-icon t-edit" });
                command.Custom("Delete").Ajax(true).ButtonType(GridButtonType.BareImage).ImageHtmlAttributes(new { @class = "t-icon t-delete" });
            }).Title("Actions").Width(90).HtmlAttributes(new { style = "text-align:left" });
            columns.Bound(u => u.Id).Width(100);
            columns.Bound(u => u.UserName).Width(250);
            columns.Bound(u => u.FullName);
            columns.Bound(u => u.Email);
            columns.Bound(u => u.IsApproved)
                .ClientTemplate("<input type='checkbox' name='nothing' <#= IsApproved ? checked='checked' : '' #> disabled='disabled' />")
                   .Title("Approved")
                   .Width(90)
                   .Filterable(false)
                   .HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(u => u.IsBanned)
                .ClientTemplate("<input type='checkbox' name='nothing' <#= IsBanned ? checked='checked' : '' #> disabled='disabled' />")
                   .Title("Banned")
                   .Width(90)
                   .Filterable(false)
                   .HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(u => u.IsLockedOut)
                .ClientTemplate("<input type='checkbox' name='nothing' <#= IsLockedOut ? checked='checked' : '' #> disabled='disabled' />")
                   .Title("Locked Out")
                   .Width(90)
                   .Filterable(false)
                   .HtmlAttributes(new { style = "text-align:center" });
        })
        .ClientEvents(clientEvents => clientEvents
            .OnCommand("OnCommand")
        )
        .DataBinding(dataBinding => dataBinding
            .Ajax()
            .Select("Users_Select", "Users")
        )
        .Filterable()
        .Sortable(sortable => sortable
            .OrderBy(orderby => orderby
                .Add(r => r.Id).Descending()))
        .Scrollable()
)

@(Html.Telerik().Window()
    .Name("Window_Create")
    .Title("Create User")
    .Draggable(true)
    .Modal(true)
    .Visible(false)
    .Scrollable(true)
    .ContentHtmlAttributes(new { @style="overflow:auto; width:auto; height:auto; min-height:225px; min-width:400px"})
    .Content(@<text>
        <div id="Content_Create"></div>
    </text>)
    .ClientEvents(clientEvents => clientEvents
        .OnClose("Window_Create_OnClose")
    )
)

@(Html.Telerik().Window()
    .Name("Window_Delete")
    .Title("Delete User")
    .Draggable(true)
    .Modal(true)
    .Visible(false)
    .Scrollable(true)
    .ContentHtmlAttributes(new { @style="overflow:auto; width:auto; height:auto; min-height:225px; min-width:400px"})
    .Content(@<text>
        <div id="Content_Delete"></div>
    </text>)
    .ClientEvents(clientEvents => clientEvents
        .OnClose("Window_Delete_OnClose")
    )
)

@(Html.Telerik().Window()
    .Name("Window_Update")
    .Title("Update User")
    .Draggable(true)
    .Modal(true)
    .Visible(false)
    .Scrollable(true)
    .ContentHtmlAttributes(new { @style="overflow:auto; width:auto; height:auto; min-height:225px; min-width:400px"})
    .Content(@<text>
        <div id="Content_Update"></div>
    </text>)
    .ClientEvents(clientEvents => clientEvents
        .OnClose("Window_Update_OnClose")
    )
)

<script type="text/javascript">

    function OnCommand(e) {

        if (e.name == "Create") {

            $.get('@Url.Action("Create", "Users")', function (data) {

                $('#Content_Create').html(data);

                var window = $('#Window_Create').data('tWindow');
                window.center().open();
            });
        }

        if (e.name == "Delete") {
            var userId = e.dataItem.Id;

            var result = confirm('Are you sure you want to delete this user (Id:' + userId + ')?');

            if (result) {
                $.post('@Url.Action("Delete", "Users")', { id: userId }, function (e) {
                $("#Grid_Users .t-refresh").trigger('click');
            });
        }
        }

        if (e.name == "Update") {
            var userId = e.dataItem.Id;

            $.get('@Url.Action("Update", "Users")', { Id: userId }, function (windowData) {

                $('#Content_Update').html(windowData);

                $.get('@Url.Action("Show", "Users")', { Id: userId }, function (contentData) {

                    $('#tabs-1').html(contentData);

                    var window = $('#Window_Update').data('tWindow');
                    window.center().open();
                });
            });
        }
    }

    // Create
    function Window_Create_Cancel() {
        $('#Window_Create').data('tWindow').close();
    }

    function Window_Create_OnClose() {
        $('#Content_Create').empty();
        $("#Grid_Users .t-refresh").trigger('click');
    }

    // Delete
    function Window_Delete_Cancel() {
        $('#Window_Delete').data('tWindow').close();
    }

    function Window_Delete_OnClose() {
        $('#Content_Delete').empty();
        $("#Grid_Users .t-refresh").trigger('click');
    }

    function Window_Update_Cancel() {
        $('#Window_Update').data('tWindow').close();
    }

    function Window_Update_Show(e) {
        $.get('@Url.Action("Show", "Users")', { Id: e }, function (data) {
            $('#tabs-1').html(data);
        });
    }

    function Window_Update_Edit(e) {
        $.get('@Url.Action("Edit", "Users")', { Id: e }, function (data) {
            $('#tabs-1').html(data);
        });
    }

    function Window_Update_Delete(userId) {
        var result = confirm('Are you sure you want to delete this user (Id:' + userId + ')?');

        if (result) {
            $.post('@Url.Action("Delete", "Users")', { id: userId }, function (e) {
                Window_Update_Cancel();
            });
        }
    }

    function Window_Update_OnClose() {
        $('#Content_Details').empty();
        $("#Grid_Users .t-refresh").trigger('click');
    }

    function Content_ChangePassword_Cancel(e) {
        $.get('@Url.Action("ShowPassword", "Users")', { id: e }, function (data) {
            $('#Content_ChangePassword').html(data);
        });
    }

    function Content_ChangePassword_OnSuccess() {
        alert('success');
    }

    // Info
    function Window_Info_Confirm(e) {
        switch (e) {
            case "Window_Delete":
                var windowDelete = $('#Window_Delete').data('tWindow');
                windowDelete.close();
                break;

            case "Window_Details":
                var windowDetails = $('#Window_Details').data('tWindow');
                windowDetails.close();
                break;

            case "Window_Create":
                var windowCreation = $('#Window_Create').data('tWindow');
                windowCreation.close();
                break;

            default:
                break;
        }
    }

    // Membership
    function setMembership(value, userid, groupid) {
        if (value) {
            $.post('@Url.Action("AddUserToGroup", "Users")', { UserId: userid, GroupId: groupid }, function (e) {
                $("#Grid_Membership .t-refresh").trigger('click');
            });
        } else {
            $.post('@Url.Action("RemoveUserFromGroup", "Users")', { UserId: userid, GroupId: groupid }, function (e) {
                $("#Grid_Membership .t-refresh").trigger('click');
            });
        }
    }

</script> 