@using Telerik.Web.Mvc.UI;
@using BExIS.Web.Shell.Areas.Auth.Models;

@model RoleModel

<script src="@Url.Content("~/Scripts/jquery-1.7.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>


@using (Ajax.BeginForm("RoleEdit", "Roles", new AjaxOptions { HttpMethod = "POST", UpdateTargetId="contentTabstripRoleInfo" }))
{   
        <div class="editor-label">
        @Html.LabelFor(m => m.Id)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.Id, new { disabled = true })
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(m => m.RoleName)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.RoleName)
        @Html.ValidationMessageFor(m => m.RoleName)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(m => m.Description)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(m => m.Description, new { style = "width: 275px; height: 100px; min-width: 100px; max-width: 350px; min-height: 40px; max-height: 200px" })
        @Html.ValidationMessageFor(m => m.Description)
    </div>

    <div class="editor-label">
        @Html.LabelFor(m => m.Comment)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(m => m.Comment, new { style = "width: 275px; height: 100px; min-width: 100px; max-width: 350px; min-height: 40px; max-height: 200px" })
        @Html.ValidationMessageFor(m => m.Comment)
    </div>
    
    <p>
        <button type="submit">Save</button>
        <button type="reset" onclick="$(this).resetValidation()">Reset</button>
        <button type="button" onclick="cancelUserEdit(@Model.Id)">Cancel</button>
    </p>
}




@using Telerik.Web.Mvc.UI;
@using BExIS.Web.Shell.Areas.Auth.Models;

@model UserModel

<script src="@Url.Content("~/Scripts/jquery-1.7.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>

@using (Ajax.BeginForm("UserEdit", "Users", new AjaxOptions { HttpMethod = "POST", UpdateTargetId="contentTabstripUserInfo" }))
{   
    @Html.ValidationSummary(true)
    
    <div class="editor-label">
        @Html.LabelFor(m => m.Id)
    </div>
    <div class="editor-field">
        @Html.DisplayFor(m => m.Id)
        @Html.HiddenFor(m => m.Id)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(m => m.UserName)
    </div>
    <div class="editor-field">
        @Html.DisplayFor(m => m.UserName)
        @Html.HiddenFor(m => m.UserName)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(m => m.Email)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.Email)
        @Html.ValidationMessageFor(m => m.Email)
    </div>

    <div class="editor-label">
        @Html.LabelFor(m => m.RegistrationDate)
    </div>
    <div class="editor-field">
        @Html.DisplayFor(m => m.RegistrationDate)
        @Html.HiddenFor(m => m.RegistrationDate)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(m => m.LastLoginDate)
    </div>
    <div class="editor-field">
        @Html.DisplayFor(m => m.LastLoginDate)
        @Html.HiddenFor(m => m.LastLoginDate)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(m => m.LastActivityDate)
    </div>
    <div class="editor-field">
        @Html.DisplayFor(m => m.LastActivityDate)
        @Html.HiddenFor(m => m.LastActivityDate)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(m => m.Comment)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(m => m.Comment, new { style = "width: 275px; height: 100px; resize: none; wrap: hard" })
        @Html.ValidationMessageFor(m => m.Comment)
    </div>
    
    <p>
        <button type="submit">Save</button>
        <button type="reset" onclick="$(this).resetValidation()">Reset</button>
        <button type="button" onclick="cancelUserEdit(@Model.Id)">Cancel</button>
    </p>
}