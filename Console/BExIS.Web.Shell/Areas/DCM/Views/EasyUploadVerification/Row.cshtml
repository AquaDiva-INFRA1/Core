@model BExIS.Modules.Dcm.UI.Models.RowModel

@using BExIS.Modules.Dcm.UI.Helpers;
@using BExIS.Modules.Dcm.UI.Models;
@using BExIS.Aam.Entities.Mapping;
@{ 
    string Show_unit_data_type = (string)ViewData["Show_unit_data_type"];
}

    <tr class="eu-row">
        <td class="name" varName="@Html.Name(Model.Name)" index=@Model.Index>@Html.Name(Model.Name)</td>

        <td>
            <!--Datatype Selector-->
            <select class="bx-dropdown datatype" name="Datatype" headerfieldId="@(Model.Index)" onchange="change(this)" onfocus="deselect(this)" onblur="reselect(this)" >
                @{
                    <option value="0" title="">- not selected -</option>

                    foreach (DataTypeInfo dataTypeInfo in Model.AvailableDataTypes)
                    {
                        string selected = "";

                        if (Model.SelectedDataType != null && Model.SelectedDataType.DataTypeId == dataTypeInfo.DataTypeId)
                        {
                            selected = "selected";
                        }

                        <option @Html.Raw(selected)
                                value="@Html.Name(Convert.ToString(dataTypeInfo.DataTypeId))"
                                title="@Html.Name(dataTypeInfo.Description)">
                            @Html.Name(dataTypeInfo.Name)
                        </option>
                    }
                }
            </select>
            <span class="preloader"></span>

        </td>
        <td>
            <!--Unit Selector-->
            <select class="bx-dropdown unit" style="width: 80%" name="Unit" headerfieldId="@Model.Index" onchange="change(this)" onfocus="deselect(this)" onblur="reselect(this)">

                <option value="0" title="">- not selected -</option>

                @foreach (UnitInfo unit in Model.AvailableUnits)
                {
                    string selected = "";

                    if (Model.SelectedUnit != null)
                    {

                        if (Model.SelectedUnit != null && Model.SelectedUnit.UnitId == unit.UnitId)
                        {
                            selected = "selected";
                        }

                    }
                    <option @Html.Raw(selected) value="@Html.Name(Convert.ToString(unit.UnitId))" title="@Html.Name(unit.Description)">@Html.Name(unit.Name) (@Html.Name(unit.Abbreviation))</option>
                }
            </select>
            <span class="preloader"></span>

        </td>

        <td varName="@Html.Name(Model.Name)" index="@Model.Index">
            <i class="fa" aria-hidden="true" title=""></i>

            <!--Dropdown-Menu to choose a suggested Attribute from - unit and datatype stored in html-Attributes for usage in javascript-->
            <select class="bx-dropdown dataattribute" style="width: 80%" name="Suggestions" onchange="change(this)" headerfieldId="@Model.Index">

                <option value="0" title="">- not selected -</option>

                @{
                    bool set = false;

                    if (Model.Suggestions != null && Model.Suggestions.Count > 0)
                    {
                        <optgroup label="Suggestions">
                            @foreach (EasyUploadSuggestion sug in Model.Suggestions)
                            {
                                if (@sug.show)
                                {
                                    string selected = "";

                                    if (Model.Name == sug.attributeName &&
                                        Model.SelectedUnit != null && Model.SelectedUnit.UnitId == sug.unitID && Model.SelectedUnit.SelectedDataTypeId == sug.dataTypeID)
                                    {
                                        selected = "selected";
                                        set = true;
                                    }

                                    <option @Html.Raw(selected) data-attribute="@sug.Id" data-unit="@sug.unitID" data-datatype="@sug.dataTypeID" value="@sug.Id">@sug.attributeName</option>
                                }
                            }
                        </optgroup>
                    }

                    if (Model.AvailableDataAttributes != null && Model.AvailableDataAttributes.Count > 0)
                    {
                        <optgroup label="All">
                            @foreach (var attr in Model.AvailableDataAttributes.OrderBy(d => d.Name))
                            {

                                string selected = "";

                                if (Model.SelectedDataAttribute != null && Model.SelectedDataAttribute.Id == attr.Id && !set)
                                {
                                    selected = "selected";
                                }

                                <option @Html.Raw(selected) data-attribute="@attr.Id" data-unit="@attr.UnitId" data-datatype="@attr.DataTypeId" value="@attr.Id">@attr.Name</option>

                            }
                        </optgroup>
                    }

                    <optgroup label="Others">

                        @{
                            string selectedUnknown = "";
                            if (Model.SelectedDataAttribute != null && Model.SelectedDataAttribute.Id == -1)
                            {
                                selectedUnknown = "selected";


                            }

                            string selectedNotFound = "";
                            if (Model.SelectedDataAttribute != null && Model.SelectedDataAttribute.Id == -2)
                            {
                                selectedNotFound = "selected";
                            }

                        }
                        <option @Html.Raw(selectedUnknown) value="-1">Unknown</option>
                        <option @Html.Raw(selectedNotFound) value="-2">Not found</option>
                    </optgroup>
                }
            </select>

            <span class="preloader"></span>

        </td>

        <td>
            <!--entity Selector-->
            <select class="bx-dropdown entity" style="width: 80%" name="entity" headerfieldId="@Model.Index" onchange="change(this)" onfocus="deselect(this)" onblur="reselect(this)">

                <option value="0" title="">- not selected -</option>
                <optgroup label="Suggestions by name variable string similiraties to Uri labels">
                    @foreach (KeyValuePair<Aam_Uri, double> aam in Model.annotation_suggestion_by_similarity)
                    {
                        string selected = "";

                        if (aam.Key.type_uri.ToLower() == "entity")
                        {
                            if (Model.selected_entity.Id != 0)
                            {
                                if (Model.selected_entity.Id == aam.Key.Id)
                                {
                                    selected = "selected";
                                }

                            }
                            <option @Html.Raw(selected) value="@Html.Name(Convert.ToString(aam.Key.Id))" title="@Html.Name(aam.Key.label)">@Html.Name(aam.Key.label) - @Html.Name(aam.Key.URI) // @Html.Raw(String.Format("{0:0.00}", aam.Value * 100))%</option>
                        }
                    }
                </optgroup>
                @if (Model.annotation_suggestions.Count > 0)
                {
                    <optgroup label="Suggestions by name variable preferences ">
                        @foreach (Aam_Dataset_column_annotation aam in Model.annotation_suggestions)
                        {
                            string selected = "";

                            if (Model.selected_entity.Id != 0)
                            {
                                if (Model.selected_entity.Id == aam.entity_id.Id)
                                {
                                    selected = "selected";
                                }

                            }
                            <option @Html.Raw(selected) value="@Html.Name(Convert.ToString(aam.entity_id.Id))" title="@Html.Name(Convert.ToString(aam.entity_id.Id))">@Html.Name(aam.entity_id.label) - @Html.Name(aam.entity_id.URI)</option>
                        }
                    </optgroup>
                }

            </select>
            <span class="preloader"></span>
        </td>

        <td>
            <!--characteristic Selector-->
            <select class="bx-dropdown charachteristic" style="width: 80%" name="charachteristic" headerfieldId="@Model.Index" onchange="change(this)" onfocus="deselect(this)" onblur="reselect(this)">

                <option value="0" title="">- not selected -</option>
                <optgroup label="Suggestions by name variable string similiraties to Uri labels">
                    @foreach (KeyValuePair<Aam_Uri, double> aam in Model.annotation_suggestion_by_similarity)
                    {
                        string selected = "";

                        if (aam.Key.type_uri.ToLower() == "charachteristic")
                        {
                            if (Model.selected_charac.Id != 0)
                            {
                                if (Model.selected_charac.Id == aam.Key.Id)
                                {
                                    selected = "selected";
                                }

                            }
                            <option @Html.Raw(selected) value="@Html.Name(Convert.ToString(aam.Key.Id))" title="@Html.Name(aam.Key.label)">@Html.Name(aam.Key.label) - @Html.Name(aam.Key.URI) // @Html.Raw(String.Format("{0:0.00}", aam.Value * 100))%</option>
                        }
                    }
                </optgroup>
                @if (Model.annotation_suggestions.Count > 0)
                {
                    <optgroup label="Suggestions by name variable preferences">
                        @foreach (Aam_Dataset_column_annotation aam in Model.annotation_suggestions)
                        {
                            string selected = "";

                            if (Model.selected_charac.Id != 0)
                            {
                                if (Model.selected_charac.Id == aam.characteristic_id.Id)
                                {
                                    selected = "selected";
                                }

                            }
                            <option @Html.Raw(selected) value="@Html.Name(Convert.ToString(aam.characteristic_id.Id))" title="@Html.Name(Convert.ToString(aam.characteristic_id.Id))">@Html.Name(aam.characteristic_id.label) - @Html.Name(aam.characteristic_id.URI)</option>
                        }
                    </optgroup>
                }

            </select>
            <span class="preloader"></span>
        </td>

    </tr>
