@{
    ViewBag.Title = "_txtFormularView";
}

@using Telerik.Web.Mvc.UI;
@using BExIS.DCM.Transform.Input;
@{
    
    List<string> TextSeperatorList = new List<string>();
    foreach (TextSeperator ms in Enum.GetValues(typeof(TextSeperator)))
    {
        TextSeperatorList.Add(ms.ToString());
    }


    List<string> DecimalCharacterList = new List<string>();
    foreach (DecimalCharacter ms in Enum.GetValues(typeof(DecimalCharacter)))
    {
        DecimalCharacterList.Add(ms.ToString());
    }

    List<string> OrientationList = new List<string>();
    foreach (Orientation ms in Enum.GetValues(typeof(Orientation)))
    {
        OrientationList.Add(ms.ToString());
    }

      
}

<table>
    <tr>
        <td>
            Seperator :
        </td>
        <td>
             @(Html.Telerik().DropDownList()
                    .Name("seperatorDropDownList")
                    .DropDownHtmlAttributes(new { style = "height: 200px" })
                    .BindTo(new SelectList(TextSeperatorList))
                )
        </td>
    </tr>
    <tr>
        <td>
            Decimal :
        </td>
        <td>
            @(Html.Telerik().DropDownList()
                    .Name("decimalDropDownList")
                    .DropDownHtmlAttributes(new { style = "height: 200px" })
                    .BindTo(new SelectList(DecimalCharacterList))
                )
        </td>
    </tr>
    <tr>
        <td>
            Orientation :
        </td>
        <td>
                @(Html.Telerik().DropDownList()
                    .Name("orientationDropDownList")
                    .DropDownHtmlAttributes(new { style = "height: 200px" })
                    .BindTo(new SelectList(OrientationList))
                    //.Enable(!useTemplate)
  
                        )
        </td>
    </tr>
    <tr>
        <td>
            Offset :
        </td>
        <td>
            @(Html.Telerik().IntegerTextBox()
                     .Name("offset")
                     .Spinners(true)
                     .MinValue(0)
                     .MaxValue(30)
                     .Value(1)
                     //.Enable(!useTemplate)

                     )
        </td>
        <td>
            Number of empty columns (columnwise) or rows (rowwise) before the variables are specified.
        </td>
    </tr>
    <tr>
        <td>
            Variables:
        </td>
        <td>
            @(Html.Telerik().IntegerTextBox()
                     .Name("variableStart")
                     .Spinners(true)
                     .MinValue(1)
                     .MaxValue(30)
                     .Value(1)
                     //.Enable(!useTemplate)

                     )
        </td>
        <td>
             Row (columnwise) or column (rowwise) in which the variables are.
        </td>
    </tr>
     <tr>
        <td>
            Data:
        </td>
        <td>
            @(Html.Telerik().IntegerTextBox()
                     .Name("dataStart")
                     .Spinners(true)
                     .MinValue(1)
                     .MaxValue(30)
                     .Value(2)
                     //.Enable(!useTemplate)

                     )
        </td>
        <td>
            Row (columnwise) or column (rowwise) in which the data starts.
        </td>
    </tr>
    <tr>
        <td>
            Dateformat :
        </td>
        <td>
            @(Html.TextBox("dataFormat", "",new {@class = "t-input"}))
        </td>
    </tr>
</table>
