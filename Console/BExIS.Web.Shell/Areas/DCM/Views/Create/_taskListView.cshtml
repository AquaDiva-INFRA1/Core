@model BExIS.Dcm.CreateDatasetWizard.CreateDatasetTaskmanager
@using Telerik.Web.Mvc.UI;
@using BExIS.Web.Shell.Areas.DCM.Models;
@using BExIS.Dcm.Wizard;
@using BExIS.Dcm.CreateDatasetWizard;

@{
   
    
       
 }
<div id="CreateWizard_TaskListDiv">
    
    @(Html.Telerik().TreeView()
        .Name("StepTreeView")
        .ClientEvents(events => events
                .OnSelect("OnClickStep"))
        .BindTo(Model.StepInfos, mappings =>
        {
            mappings.For<StepInfo>(binding => binding
                .ItemDataBound((item, stepinfo) =>
                {
                    item.Text = stepinfo.title;
                    item.Value = stepinfo.Id.ToString();
                    item.Selected = @Model.IsCurrent(stepinfo);
                    item.Expanded = (@Model.IsCurrent(stepinfo) || @Model.IsChildCurrent(stepinfo));
                    item.LinkHtmlAttributes["actionName"] = stepinfo.GetActionInfo.ActionName;
                    item.LinkHtmlAttributes["controllerName"] = stepinfo.GetActionInfo.ControllerName;
                    item.LinkHtmlAttributes["areaName"] = stepinfo.GetActionInfo.AreaName;
                    


                    switch (stepinfo.stepStatus)
                    {
                        case StepStatus.success:
                            {
                                item.ImageUrl = "Images/emptyPng.png";
                                item.LinkHtmlAttributes["class"] = "facetSuccess";
                                item.ImageHtmlAttributes["class"] = "t-icon t-insert";
                                break;
                            }
                        case StepStatus.inProgress:
                            {
                                item.ImageUrl = "Images/emptyPng.png";
                                item.ImageHtmlAttributes["class"] = "t-icon t-arrow-prev";
                                break;
                            }
                        case StepStatus.error:
                            {
                                item.ImageUrl = "Images/emptyPng.png";
                                item.LinkHtmlAttributes["class"] = "facetError";
                                item.ImageHtmlAttributes["class"] = "t-icon t-cancel";
                                break;
                            }
                        default:
                            {

                                break;
                            }
                    }

                    //item.ActionName = stepinfo.GetActionInfo.ActionName;
                    //item.ControllerName = stepinfo.GetActionInfo.ControllerName;
                    //item.Action(stepinfo.GetActionInfo.ActionName, stepinfo.GetActionInfo.ControllerName, new RouteValueDictionary { { "area", stepinfo.GetActionInfo.AreaName }, { "index", stepinfo.Id } });
                    
                })
                .Children(stepinfo => stepinfo.Children));
        }
        
    ))

@*<table id="taskListTable">

    <br />
    <hr />
    <br />
    <br />

    @foreach (var item in Model.Root.Children)
    {
        string id = @item.Id + "_" + @item.title + "_" + @item.GetActionInfo.ActionName + "_" + @item.GetActionInfo.ControllerName;
        <tr>
            <td >
                @if (Model.Current().Equals(item))
                { 
                    <b id="@id" class="t-link">@item.title</b>
                }
                else
                { 
                    <span id="@id" class="t-link" onclick="OnClickStep2(this)">@item.title</span>
                }
            </td>
            <td>

                @switch (item.stepStatus)
                {
                    case StepStatus.success:
                        {
                            <div class="t-icon t-insert" ></div>
                            break;
                        }
                    case StepStatus.inProgress:
                        {
                            <div class="t-icon t-arrow-prev" ></div>
                            break;
                        }
                    case StepStatus.error:
                        {
                            <div class="t-icon t-cancel" ></div>
                            break;
                        }
                    default:
                        {

                            break;
                        }
                }

            </td>
        </tr>
    }
</table>*@
</div>

@*JavaScript*@
<script type="text/javascript">

function TaskListRefresh()
{
    $.post('@Url.Action("RefreshTaskList", "Create", new RouteValueDictionary { { "area", "DCM" } })', function (response) {
        $("#CreateWizard_TaskListDiv").html(response);
    })
}

    function treeView() {
        return $('#StepTreeView').data('tTreeView');
    }

    function OnClickStep(e) {

        var element = e.item;
        var selectedItem = treeView().getItemText(e.item);
        var selectedItemValue = treeView().getItemValue(e.item);

        var span = element.getElementsByClassName("t-in")[0];

        var action = span.getAttribute("actionname");
        var controller = span.getAttribute("controllername");
        var area = span.getAttribute("areaname");

        //alert("test");
        $('#preloader').show();

        var url = '/'+area+'/' + controller + '/' + action;

        $.get(url, { index: selectedItemValue }, function (response) {
            $("#StepView").html(response);
            NavigationRefresh();
            TaskListRefresh();
            $('#preloader').hide();
        })
    }

</script>

@*CSS*@

<style type="text/css">

    .facetError
    {
        background-color:#FF4040
    }

    .facetSuccess
    {
        background-color:#90EE90
    }

    #taskListTable tr td
    {
        border-style: none;
    }

    #taskListTable
    {
        border-style: none;
    }

</style>