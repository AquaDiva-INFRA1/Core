@using Telerik.Web.Mvc.UI
@model BExIS.Web.Shell.Areas.SAM.Models.UserCreateModel
@using (Ajax.BeginForm("Create", "Users", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "contentCreate", OnSuccess = "userCreate_onSuccess" }))
{
    @Html.ValidationSummary(true)

    <table class="bx-table-form">
        <tr>
            <td>
                @Html.Label("Authentication Provider")
            </td>
            <td>
                @(Html.Telerik().DropDownListFor(m => m.AuthenticatorList.Id)
                    .HtmlAttributes(new { style = "width:372px; padding-left: 2px;", @class = "t-input bx-input" })
                    .DropDownHtmlAttributes(new { style = "width:auto;", @class = "t-input bx-input" })
                    .BindTo(new SelectList(Model.AuthenticatorList.AuthenticatorList, "Id", "Name")))
                @Html.ValidationMessageFor(m => m.AuthenticatorList.Id)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.UserName)
            </td>
            <td>
                @Html.TextBoxFor(m => m.UserName, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.UserName)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.Password)
            </td>
            <td>
                @Html.PasswordFor(m => m.Password, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.Password)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.ConfirmPassword)
            </td>
            <td>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.FullName)
            </td>
            <td>
                @Html.TextBoxFor(m => m.FullName, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.FullName)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.Email)
            </td>
            <td>
                @Html.TextBoxFor(m => m.Email, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.Email)
            </td>
        </tr>
        <tr>
            <td>
                @Html.Label("Security Question")
            </td>
            <td>
                @(Html.Telerik().DropDownListFor(m => m.SecurityQuestionList.Id)
                    .Placeholder("--- SELECT ---")
                    .HtmlAttributes(new { style = "width:372px; padding-left: 2px;", @class = "t-input bx-input" })
                    .DropDownHtmlAttributes(new { style = "width:auto;" })
                    .BindTo(new SelectList(Model.SecurityQuestionList.SecurityQuestionList, "Id", "Question")))
                @Html.ValidationMessageFor(m => m.SecurityQuestionList.Id)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.SecurityAnswer)
            </td>
            <td>
                @Html.TextBoxFor(m => m.SecurityAnswer, new { @class = "t-input bx-input" })
                @Html.ValidationMessageFor(m => m.SecurityAnswer)
            </td>
        </tr>
    </table>

    <div class="bx-footer right">
        <button style="margin-right: 1px" type="submit" class="bx-button action">Save</button>
        <button style="margin-left: 1px" type="button" onclick="windowCreate_onCancel()" class="bx-button action">Cancel</button>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#contentCreate");
    });
</script>