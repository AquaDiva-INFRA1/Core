@using BExIS.Modules.Sam.UI.Models
@using Telerik.Web.Mvc.UI

@(Html.Telerik().Grid<GroupMembershipGridRowModel>()
    .Name("gridGroups")
    .Columns(columns =>
    {
        columns.Bound(g => g.IsMember)
            .Template(@<text>
            @if (item.IsMember)
            {
                <input type='checkbox' name='selectedGroups' value='@item.Id' checked='checked' />
            }
            else
            {
                <input type='checkbox' name='selectedGroups' value='@item.Id' />
            }
            </text>)
            .ClientTemplate("<input type='checkbox' name='selectedGroups' value='<#= Id #>' <#= IsMember ? checked='checked' : '' #> />")
            .Title("Member")
            .Width(64)
            .Filterable(false)
            .HtmlAttributes(new { style = "text-align:center" });
        columns.Bound(g => g.Id);
        columns.Bound(g => g.GroupName);
        columns.Bound(g => g.GroupType);
        columns.Bound(g => g.Description);
    })
    .ClientEvents(events =>
    {
        events.OnDataBound("onDataBound");
        events.OnDataBinding("onDataBinding");
    })
    .DataBinding(dataBinding => dataBinding
        .Ajax()
        .Select("Groups_Select", "Users")
    )
    .EnableCustomBinding(true)
    .Filterable()
    .Pageable(pageable =>
    {
        pageable.PageSize(10, new[] { 10, 20, 50, 100 });
        pageable.Style(GridPagerStyles.NextPreviousAndNumeric | GridPagerStyles.PageSizeDropDown);
        pageable.Position(GridPagerPosition.Bottom);
    })
    .Sortable(sortable => sortable.OrderBy(order => order.Add(c => c.Id).Descending())))