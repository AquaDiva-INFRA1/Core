@using BExIS.Modules.Sam.UI.Models
@using Telerik.Web.Mvc.UI

@(Html.Telerik().Grid<GroupMembershipGridRowModel>()
      .Name("grid_usermemberships")
      .Columns(columns =>
      {
          columns.Bound(g => g.IsUserInGroup)
              .Template(@<text>
            @if (item.IsUserInGroup)
            {
                <input type='checkbox' name='selectedGroups' value='@item.Id' checked='checked' />
            }
            else
            {
                <input type='checkbox' name='selectedGroups' value='@item.Id' />
            }
            </text>)
              .ClientTemplate("<input type='checkbox' name='selectedGroups' value='<#= Id #>' <#= IsUserInGroup ? checked='checked' : '' #> />")
              .Title("Member")
              .Width(64)
              .Filterable(false)
              .HtmlAttributes(new { style = "text-align:center" });
          columns.Bound(g => g.Id);
          columns.Bound(g => g.Name);
          columns.Bound(g => g.Description);
      })
      .ClientEvents(events =>
      {
          events.OnDataBinding("ondatabinding_grid_usermembership");
          events.OnDataBound("ondatabound_grid_usermembership");
      })
      .DataBinding(dataBinding => dataBinding
          .Ajax()
          .OperationMode(GridOperationMode.Client)
          .Select("Memberships_Select", "Users"))
      .Filterable()
      .Pageable(pageable =>
      {
          pageable.PageSize(10, new[] { 10, 20, 50, 100 });
          pageable.Style(GridPagerStyles.NextPreviousAndNumeric | GridPagerStyles.PageSizeDropDown);
          pageable.Position(GridPagerPosition.Bottom);
      })
      .Sortable(sortable => sortable.OrderBy(order => order.Add(c => c.Id).Descending())))

<script>
    function ondatabound_grid_usermembership() {
        addTooltips();
        resetAllTelerikIconTitles();
    }

    function ondatabinding_grid_usermembership() {
        alert("jksdlf");
    }
</script>