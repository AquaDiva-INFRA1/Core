@using BExIS.Modules.Sam.UI.Models
@using Telerik.Web.Mvc.UI
@model BExIS.Modules.Sam.UI.Models.CreateGroupModel

@using (Html.BeginForm("Create", "Groups", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#details">Details</a></li>
        <li><a data-toggle="tab" href="#users">Users</a></li>
    </ul>

    <div class="tab-content row-eq-height">
        <div id="details" class="tab-pane fade in active">
            <div class="form-group">
                @Html.LabelFor(m => m.GroupType, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(m => m.GroupType, 0, new { @class = "form-control" }) Private
                    @Html.RadioButtonFor(m => m.GroupType, 1, new { @class = "form-control" }) Public
                    @Html.ValidationMessageFor(m => m.GroupType)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.GroupName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.GroupName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.GroupName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Description)
                </div>
            </div>
        </div>
        <div id="users" class="tab-pane fade">
            @(Html.Telerik().Grid<UserMembershipGridRowModel>()
                  .Name("gridMemberships")
                  .Columns(columns =>
                  {
                      columns.Bound(m => m.IsUserInGroup)
                          .Template(@<text>
                        @if (item.IsUserInGroup)
                        {
                            <input type='checkbox' onchange='setMembership(this.checked, @item.Id);' name='selectedUsers' value='@item.Id' checked='checked' />
                        }
                        else
                        {
                            <input type='checkbox' onchange='setMembership(this.checked, @item.Id);' name='selectedUsers' value='@item.Id' />
                        }
                        </text>)
                          .ClientTemplate("<input type='checkbox' onchange='setMembership(this.checked, <#= Id #>);' name='selectedUsers' value='<#= Id #>' <#= IsUserInGroup ? checked='checked' : '' #> />")
                          .Title("Member")
                          .Width(64)
                          .Filterable(false)
                          .HtmlAttributes(new { style = "text-align:center" });
                      columns.Bound(m => m.Id)
                          .ClientTemplate("<#= Id #>" + "<input type='hidden' name='Id' value='<#= Id #> />'")
                          .Width(80);
                      columns.Bound(m => m.Username);
                      columns.Bound(m => m.FullName);
                      columns.Bound(m => m.Email);
                  })
                  .ClientEvents(clientEvents =>
                  {
                      clientEvents.OnDataBound("onDataBound");
                  })
                  .DataBinding(dataBinding => dataBinding
                      .Ajax()
                      .Select("Memberships_Select", "Groups")
                  )
                  .EnableCustomBinding(true)
                  .Filterable()
                  .Pageable(pageable =>
                  {
                      pageable.PageSize(10, new[] { 10, 20, 50, 100 });
                      pageable.Style(GridPagerStyles.NextPreviousAndNumeric | GridPagerStyles.PageSizeDropDown);
                      pageable.Position(GridPagerPosition.Both);
                  })
                  .Sortable()
            )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}

@section Scripts{
    <script type="text/javascript">
        function setMembership(value, id) {

            var rows = $("#gridMemberships").data("tGrid").data;

            for (var i = 0; i < rows.length; ++i) {
                if (rows[i].Id == id) {
                    rows[i].IsUserInGroup = value;
                }
            }
        }

        function onDataBound() {
            addTooltips();
            resetAllTelerikIconTitles();
        }
    </script>
}