@using System.Web.UI.WebControls
@using BExIS.Web.Shell.Areas.SAM.Models
@using Telerik.Web.Mvc.UI
@using Telerik.Web.Mvc.UI.Fluent

@{
    ViewBag.Title = "UserPis";
}

<h2>User Pi Mapping</h2>

@(Html.Telerik().Grid<UserPisGridRowModel>()
      .Name("gridUsers")
      .ToolBar(command =>
      {
          command.Custom().Name("Create").Text("Create").Ajax(true).Action("Create", "UserPis").ButtonType(GridButtonType.ImageAndText).ImageHtmlAttributes(new { @class = "t-icon t-add" });
      })
      .Columns(columns =>
      {
          columns.Command(command =>
          {
              command.Custom("Edit").Text("Edit").Ajax(true).ButtonType(GridButtonType.Text);
          }).Title("Actions").Width(90).HtmlAttributes(new { style = "text-align:left" });
          columns.Bound(u => u.Id);
          //columns.Bound(u => u.UserId);
          columns.Bound(u => u.UserName);
          //columns.Bound(u => u.PiId);
          columns.Bound(u => u.PiName);
      })
      .ClientEvents(clientEvents => clientEvents
          .OnCommand("gridUsers_onCommand")
      )
      .DataBinding(dataBinding => dataBinding
          .Ajax()
          .OperationMode(GridOperationMode.Client)
          .Select("UserPis_Select", "UserPis")
      )
      .Filterable()
      .Pageable(pageable =>
      {
          pageable.PageSize(100, new[] {10, 20, 50, 100});
          pageable.Style(GridPagerStyles.NextPreviousAndNumeric | GridPagerStyles.PageSizeDropDown);
      })
      .Sortable(sorting => sorting.OrderBy(sortOrder => sortOrder.Add(o => o.Id))))


<script type="text/javascript">

    // --------------------------------------------------
    // GRID
    // --------------------------------------------------

    function gridUsers_onCommand(e) {

        switch (e.name) {
            case "Create":
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("Create", "UserPis")',
                    dataType: 'html',
                    success: function (htmlData) {
                        var windowElement = $.telerik.window.create({
                            title: "Create User",
                            html: "<div id='contentCreate'>" + htmlData + "</div>",
                            contentUrl: "",
                            actions: ["Close"],
                            modal: true,
                            width: 500,
                            height: 500,
                            resizable: false,
                            draggable: true,
                            scrollable: false,
                            onClose: function () {
                                $("#windowCreate").data('tWindow').destroy();
                                $("#gridUsers .t-refresh").trigger('click');
                            }
                        });

                        
                        windowElement.attr('id', 'windowCreate');
                        var window = $(windowElement).data('tWindow');
                        window.center().open();
                        
                    }
                })

                break;

            case "Edit":
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("Edit", "UserPis")',
                    data: { Id: e.dataItem.Id },
                    dataType: 'html',
                    success: function (htmlData) {
                        var windowElement = $.telerik.window.create({
                            title: "Edit UserPi (Id: " + e.dataItem.Id + ")",
                            html: "<div id='contentEdit'>" + htmlData + "</div>",
                            contentUrl: "",
                            actions: ["Close"],
                            modal: true,
                            width: 500,
                            height: 500,
                            resizable: false,
                            draggable: true,
                            scrollable: false,
                            onClose: function () {
                                $("#windowEdit").data('tWindow').destroy();
                                $("#gridUsers .t-refresh").trigger('click');
                            }
                        });

                        windowElement.attr('id', 'windowEdit');
                        var window = $(windowElement).data('tWindow');
                        window.center().open();
                    }
                })

                break;

            default:
                break;
        }
    }

    // --------------------------------------------------
    // CREATE
    // --------------------------------------------------

    function windowCreate_onCancel() {
        $('#windowCreate').data('tWindow').close();
    }

    // --------------------------------------------------
    // EDIT
    // --------------------------------------------------

    function windowEdit_onCancel() {
        $('#windowEdit').data('tWindow').close();
    }

    function userPiCreate_onSuccess(data) {
        if (data.success) {
            $('#windowCreate').data('tWindow').close();
        }
    }

    function userPiEdit_onSuccess(data) {
        if (data.success) {
            $('#windowEdit').data('tWindow').close();
        }
    }

    function windowEdit_onDelete(userId) {
        var result = confirm('Are you sure you want to delete this user pi mapping (Id:' + userId + ')?');

        if (result) {
            $.post('@Url.Action("Delete", "UserPis")', { id: userId }, function (e) {
                $('#windowEdit').data('tWindow').close();
            });
        }
    }

    </script>