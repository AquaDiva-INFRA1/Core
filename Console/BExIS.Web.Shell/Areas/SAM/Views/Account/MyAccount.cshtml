@using Telerik.Web.Mvc.UI
@model BExIS.Web.Shell.Areas.SAM.Models.MyAccountModel

@section Information
{
    <p>
        This page summarizes your personal account information. 
        Furthermore, you are able to edit that data, but there are two important facts you should be aware of:
    </p>

    <ol>
        <li>
            Password Change - You need to enter both, <i>Password</i> and <i>Confirm Password</i>.
        </li>
        <li>
            Security Question/Answer - You need to enter both, <i>Security Question</i> and <i>Security Answer</i>.
        </li>
    </ol>

    <p>
        Otherwise, the abovementioned properties aren't changed. 
    </p>
}

@using (Html.BeginForm("MyAccount","Account", FormMethod.Post, null))
{
    @Html.ValidationSummary(true)

    <table class="bx-table-form">
        <tr>
            <td>
                @Html.LabelFor(m => m.UserId)
            </td>
            <td>
                @Html.TextBoxFor(m => m.UserId, new {@class = "t-input bx-input", disabled = "disabled"})
                @Html.HiddenFor(m => m.UserId)
            </td>
        </tr>
        <tr>
            <td>
                @Html.Label("Authentication Provider")
            </td>
            <td>
                @(Html.Telerik().DropDownListFor(m => m.AuthenticatorId)
                      .HtmlAttributes(new {style = "width:372px; padding-left: 2px;", @class = "t-input bx-input"})
                      .DropDownHtmlAttributes(new {style = "width:auto;", @class = "t-input bx-input"})
                      .BindTo(new SelectList(Model.AuthenticatorList.AuthenticatorList, "Id", "Name"))
                      .Enable(false))
                @Html.HiddenFor(m => m.AuthenticatorId)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.Username)
            </td>
            <td>
                @Html.TextBoxFor(m => m.Username, new {@class = "t-input bx-input", disabled = "disabled"})
                @Html.HiddenFor(m => m.Username)
            </td>
        </tr>

        @if (Model.AuthenticatorId == 1)
        {
            <tr>
                <td>
                    @Html.LabelFor(m => m.Password)
                </td>
                <td>
                    @Html.PasswordFor(m => m.Password, new { @class = "t-input bx-input", placeholder = "******" })
                    @Html.ValidationMessageFor(m => m.Password)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.ConfirmPassword)
                </td>
                <td>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "t-input bx-input", placeholder = "******" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </td>
            </tr>
        }
        
        <tr>
            <td>
                @Html.LabelFor(m => m.FullName)
            </td>
            <td>
                @Html.TextBoxFor(m => m.FullName, new {@class = "t-input bx-input"})
                @Html.ValidationMessageFor(m => m.FullName)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.Email)
            </td>
            <td>
                @Html.TextBoxFor(m => m.Email, new {@class = "t-input bx-input"})
                @Html.ValidationMessageFor(m => m.Email)
            </td>
        </tr>

        @if (Model.AuthenticatorId == 1)
        {
            <tr>
                <td>
                    @Html.Label("Security Question")
                </td>
                <td>
                    @(Html.Telerik().DropDownListFor(m => m.SecurityQuestionId)
                      .Placeholder("--- SELECT ---")
                      .HtmlAttributes(new { style = "width:372px; padding-left: 2px;", @class = "t-input bx-input" })
                      .DropDownHtmlAttributes(new { style = "width:auto;" })
                      .BindTo(new SelectList(Model.SecurityQuestionList.SecurityQuestionList, "Id", "Question")))
                    @Html.ValidationMessageFor(m => m.SecurityQuestionId)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.SecurityAnswer)
                </td>
                <td>
                    @Html.TextBoxFor(m => m.SecurityAnswer, new { @class = "t-input bx-input", placeholder = "******" })
                    @Html.ValidationMessageFor(m => m.SecurityAnswer)
                </td>
            </tr>
        }
        
    </table>

    <div class="bx-footer right">
        <button type="reset" class="bx-button action">Reset</button>
        <button type="submit" class="bx-button action">Save</button>
    </div>
}