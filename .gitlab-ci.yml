variables:
  EXE_RELEASE_FOLDER: '/home/administrator/CI-CD_Output_Test/YourApp/bin/Release'
  MSI_RELEASE_FOLDER: '/home/administrator/CI-CD_Output_Test/Setup/bin/Release'
  TEST_FOLDER: '/home/administrator/CI-CD_Output_Test/Tests/bin/Release'
  DEPLOY_FOLDER: '/home/administrator/CI-CD_Output_Test/Projects/YourApp/Builds'
  NUGET_PATH: '/usr/bin/nuget'
  MSBUILD_PATH: '/usr/bin/msbuild'
  NUNIT_PATH: '/usr/bin/nunit-console'

stages:
  - build
  - deploy

build_job: 
  stage: build
  script:
    - '"$env:NUGET_PATH" restore'  # restore Nuget dependencies
    - '"$env:MSBUILD_PATH" /p:Configuration=Release'  # build the project
  artifacts:
    expire_in: 1 week  # save gitlab server space, we copy the files we need to deploy folder later on
    paths:
      - '$env:EXE_RELEASE_FOLDER\YourApp.exe'  # saving exe to copy to deploy folder
      - '$env:MSI_RELEASE_FOLDER\YourApp Setup.msi'  # saving msi to copy to deploy folder
      - '$env:TEST_FOLDER\'  # saving entire Test project so NUnit can run tests
  tags: 
    - runner_Demo_1



deploy_job:
  stage: deploy
  tags: 
    - runner_Demo_1
  script:
    - '$commitSubject = git log -1 --pretty=%s'
    - '$deployFolder = $($env:DEPLOY_FOLDER) + "\" + $($env:CI_BUILD_TAG) + " - " + $commitSubject + "\"'

    # xcopy takes care of recursively creating required folders
    - 'xcopy /y ".\$env:EXE_RELEASE_FOLDER\YourApp.exe" "$deployFolder"'
    - 'xcopy /y ".\$env:MSI_RELEASE_FOLDER\YourApp Setup.msi" "$deployFolder"'
    - 'xcopy /y ".\TestResult.xml" "$deployFolder"'
  dependencies:
    - build_job
